!function (t) {
    if ("object" == typeof exports && "undefined" != typeof module)
        module.exports = t();
    else if ("function" == typeof define && define.amd)
        define([], t);
    else {
        ("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this).WAValidator = t()
    }
}(function () {
    return function o(a, s, u) {
        function f(e, t) {
            if (!s[e]) {
                if (!a[e]) {
                    var r = "function" == typeof require && require;
                    if (!t && r)
                        return r(e, !0);
                    if (c)
                        return c(e, !0);
                    var n = new Error("Cannot find module '" + e + "'");
                    throw n.code = "MODULE_NOT_FOUND",
                    n
                }
                var i = s[e] = {
                    exports: {}
                };
                a[e][0].call(i.exports, function (t) {
                    return f(a[e][1][t] || t)
                }, i, i.exports, o, a, s, u)
            }
            return s[e].exports
        }
        for (var c = "function" == typeof require && require, t = 0; t < u.length; t++)
            f(u[t]);
        return f
    }({
        1: [function (t, e, r) {
            "use strict";
            var b = t("safe-buffer").Buffer;
            e.exports = function (l) {
                if (255 <= l.length)
                    throw new TypeError("Alphabet too long");
                var d = new Uint8Array(256);
                d.fill(255);
                for (var t = 0; t < l.length; t++) {
                    var e = l.charAt(t)
                        , r = e.charCodeAt(0);
                    if (255 !== d[r])
                        throw new TypeError(e + " is ambiguous");
                    d[r] = t
                }
                var p = l.length
                    , y = l.charAt(0)
                    , v = Math.log(p) / Math.log(256)
                    , g = Math.log(256) / Math.log(p);
                function n(t) {
                    if ("string" != typeof t)
                        throw new TypeError("Expected String");
                    if (0 === t.length)
                        return b.alloc(0);
                    var e = 0;
                    if (" " !== t[e]) {
                        for (var r = 0, n = 0; t[e] === y;)
                            r++,
                                e++;
                        for (var i = (t.length - e) * v + 1 >>> 0, o = new Uint8Array(i); t[e];) {
                            var a = d[t.charCodeAt(e)];
                            if (255 === a)
                                return;
                            for (var s = 0, u = i - 1; (0 !== a || s < n) && -1 !== u; u--,
                                s++)
                                a += p * o[u] >>> 0,
                                    o[u] = a % 256 >>> 0,
                                    a = a / 256 >>> 0;
                            if (0 !== a)
                                throw new Error("Non-zero carry");
                            n = s,
                                e++
                        }
                        if (" " !== t[e]) {
                            for (var f = i - n; f !== i && 0 === o[f];)
                                f++;
                            var c = b.allocUnsafe(r + (i - f));
                            c.fill(0, 0, r);
                            for (var h = r; f !== i;)
                                c[h++] = o[f++];
                            return c
                        }
                    }
                }
                return {
                    encode: function (t) {
                        if (!b.isBuffer(t))
                            throw new TypeError("Expected Buffer");
                        if (0 === t.length)
                            return "";
                        for (var e = 0, r = 0, n = 0, i = t.length; n !== i && 0 === t[n];)
                            n++,
                                e++;
                        for (var o = (i - n) * g + 1 >>> 0, a = new Uint8Array(o); n !== i;) {
                            for (var s = t[n], u = 0, f = o - 1; (0 !== s || u < r) && -1 !== f; f--,
                                u++)
                                s += 256 * a[f] >>> 0,
                                    a[f] = s % p >>> 0,
                                    s = s / p >>> 0;
                            if (0 !== s)
                                throw new Error("Non-zero carry");
                            r = u,
                                n++
                        }
                        for (var c = o - r; c !== o && 0 === a[c];)
                            c++;
                        for (var h = y.repeat(e); c < o; ++c)
                            h += l.charAt(a[c]);
                        return h
                    },
                    decodeUnsafe: n,
                    decode: function (t) {
                        var e = n(t);
                        if (e)
                            return e;
                        throw new Error("Non-base" + p + " character")
                    }
                }
            }
        }
            , {
            "safe-buffer": 32
        }],
        2: [function (t, e, r) {
            "use strict";
            r.byteLength = function (t) {
                var e = h(t)
                    , r = e[0]
                    , n = e[1];
                return 3 * (r + n) / 4 - n
            }
                ,
                r.toByteArray = function (t) {
                    var e, r, n = h(t), i = n[0], o = n[1], a = new c(function (t, e) {
                        return 3 * (t + e) / 4 - e
                    }(i, o)), s = 0, u = 0 < o ? i - 4 : i;
                    for (r = 0; r < u; r += 4)
                        e = f[t.charCodeAt(r)] << 18 | f[t.charCodeAt(r + 1)] << 12 | f[t.charCodeAt(r + 2)] << 6 | f[t.charCodeAt(r + 3)],
                            a[s++] = e >> 16 & 255,
                            a[s++] = e >> 8 & 255,
                            a[s++] = 255 & e;
                    2 === o && (e = f[t.charCodeAt(r)] << 2 | f[t.charCodeAt(r + 1)] >> 4,
                        a[s++] = 255 & e);
                    1 === o && (e = f[t.charCodeAt(r)] << 10 | f[t.charCodeAt(r + 1)] << 4 | f[t.charCodeAt(r + 2)] >> 2,
                        a[s++] = e >> 8 & 255,
                        a[s++] = 255 & e);
                    return a
                }
                ,
                r.fromByteArray = function (t) {
                    for (var e, r = t.length, n = r % 3, i = [], o = 0, a = r - n; o < a; o += 16383)
                        i.push(u(t, o, a < o + 16383 ? a : o + 16383));
                    1 == n ? (e = t[r - 1],
                        i.push(s[e >> 2] + s[e << 4 & 63] + "==")) : 2 == n && (e = (t[r - 2] << 8) + t[r - 1],
                            i.push(s[e >> 10] + s[e >> 4 & 63] + s[e << 2 & 63] + "="));
                    return i.join("")
                }
                ;
            for (var s = [], f = [], c = "undefined" != typeof Uint8Array ? Uint8Array : Array, n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", i = 0, o = n.length; i < o; ++i)
                s[i] = n[i],
                    f[n.charCodeAt(i)] = i;
            function h(t) {
                var e = t.length;
                if (0 < e % 4)
                    throw new Error("Invalid string. Length must be a multiple of 4");
                var r = t.indexOf("=");
                return -1 === r && (r = e),
                    [r, r === e ? 0 : 4 - r % 4]
            }
            function u(t, e, r) {
                for (var n, i, o = [], a = e; a < r; a += 3)
                    n = (t[a] << 16 & 16711680) + (t[a + 1] << 8 & 65280) + (255 & t[a + 2]),
                        o.push(s[(i = n) >> 18 & 63] + s[i >> 12 & 63] + s[i >> 6 & 63] + s[63 & i]);
                return o.join("")
            }
            f["-".charCodeAt(0)] = 62,
                f["_".charCodeAt(0)] = 63
        }
            , {}],
        3: [function (j, t, F) {
            (function (h) {
                "use strict";
                var n = j("base64-js")
                    , o = j("ieee754")
                    , t = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null;
                F.Buffer = h,
                    F.SlowBuffer = function (t) {
                        +t != t && (t = 0);
                        return h.alloc(+t)
                    }
                    ,
                    F.INSPECT_MAX_BYTES = 50;
                var r = 2147483647;
                function a(t) {
                    if (r < t)
                        throw new RangeError('The value "' + t + '" is invalid for option "size"');
                    var e = new Uint8Array(t);
                    return Object.setPrototypeOf(e, h.prototype),
                        e
                }
                function h(t, e, r) {
                    if ("number" != typeof t)
                        return i(t, e, r);
                    if ("string" == typeof e)
                        throw new TypeError('The "string" argument must be of type string. Received type number');
                    return u(t)
                }
                function i(t, e, r) {
                    if ("string" == typeof t)
                        return function (t, e) {
                            "string" == typeof e && "" !== e || (e = "utf8");
                            if (!h.isEncoding(e))
                                throw new TypeError("Unknown encoding: " + e);
                            var r = 0 | l(t, e)
                                , n = a(r)
                                , i = n.write(t, e);
                            i !== r && (n = n.slice(0, i));
                            return n
                        }(t, e);
                    if (ArrayBuffer.isView(t))
                        return f(t);
                    if (null == t)
                        throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t);
                    if (R(t, ArrayBuffer) || t && R(t.buffer, ArrayBuffer))
                        return function (t, e, r) {
                            if (e < 0 || t.byteLength < e)
                                throw new RangeError('"offset" is outside of buffer bounds');
                            if (t.byteLength < e + (r || 0))
                                throw new RangeError('"length" is outside of buffer bounds');
                            var n;
                            n = void 0 === e && void 0 === r ? new Uint8Array(t) : void 0 === r ? new Uint8Array(t, e) : new Uint8Array(t, e, r);
                            return Object.setPrototypeOf(n, h.prototype),
                                n
                        }(t, e, r);
                    if ("number" == typeof t)
                        throw new TypeError('The "value" argument must not be of type number. Received type number');
                    var n = t.valueOf && t.valueOf();
                    if (null != n && n !== t)
                        return h.from(n, e, r);
                    var i = function (t) {
                        if (h.isBuffer(t)) {
                            var e = 0 | c(t.length)
                                , r = a(e);
                            return 0 === r.length ? r : (t.copy(r, 0, 0, e),
                                r)
                        }
                        if (void 0 !== t.length)
                            return "number" != typeof t.length || L(t.length) ? a(0) : f(t);
                        if ("Buffer" === t.type && Array.isArray(t.data))
                            return f(t.data)
                    }(t);
                    if (i)
                        return i;
                    if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof t[Symbol.toPrimitive])
                        return h.from(t[Symbol.toPrimitive]("string"), e, r);
                    throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof t)
                }
                function s(t) {
                    if ("number" != typeof t)
                        throw new TypeError('"size" argument must be of type number');
                    if (t < 0)
                        throw new RangeError('The value "' + t + '" is invalid for option "size"')
                }
                function u(t) {
                    return s(t),
                        a(t < 0 ? 0 : 0 | c(t))
                }
                function f(t) {
                    for (var e = t.length < 0 ? 0 : 0 | c(t.length), r = a(e), n = 0; n < e; n += 1)
                        r[n] = 255 & t[n];
                    return r
                }
                function c(t) {
                    if (r <= t)
                        throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + r.toString(16) + " bytes");
                    return 0 | t
                }
                function l(t, e) {
                    if (h.isBuffer(t))
                        return t.length;
                    if (ArrayBuffer.isView(t) || R(t, ArrayBuffer))
                        return t.byteLength;
                    if ("string" != typeof t)
                        throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof t);
                    var r = t.length
                        , n = 2 < arguments.length && !0 === arguments[2];
                    if (!n && 0 === r)
                        return 0;
                    for (var i = !1; ;)
                        switch (e) {
                            case "ascii":
                            case "latin1":
                            case "binary":
                                return r;
                            case "utf8":
                            case "utf-8":
                                return I(t).length;
                            case "ucs2":
                            case "ucs-2":
                            case "utf16le":
                            case "utf-16le":
                                return 2 * r;
                            case "hex":
                                return r >>> 1;
                            case "base64":
                                return O(t).length;
                            default:
                                if (i)
                                    return n ? -1 : I(t).length;
                                e = ("" + e).toLowerCase(),
                                    i = !0
                        }
                }
                function d(t, e, r) {
                    var n = t[e];
                    t[e] = t[r],
                        t[r] = n
                }
                function p(t, e, r, n, i) {
                    if (0 === t.length)
                        return -1;
                    if ("string" == typeof r ? (n = r,
                        r = 0) : 2147483647 < r ? r = 2147483647 : r < -2147483648 && (r = -2147483648),
                        L(r = +r) && (r = i ? 0 : t.length - 1),
                        r < 0 && (r = t.length + r),
                        r >= t.length) {
                        if (i)
                            return -1;
                        r = t.length - 1
                    } else if (r < 0) {
                        if (!i)
                            return -1;
                        r = 0
                    }
                    if ("string" == typeof e && (e = h.from(e, n)),
                        h.isBuffer(e))
                        return 0 === e.length ? -1 : y(t, e, r, n, i);
                    if ("number" == typeof e)
                        return e &= 255,
                            "function" == typeof Uint8Array.prototype.indexOf ? i ? Uint8Array.prototype.indexOf.call(t, e, r) : Uint8Array.prototype.lastIndexOf.call(t, e, r) : y(t, [e], r, n, i);
                    throw new TypeError("val must be string, number or Buffer")
                }
                function y(t, e, r, n, i) {
                    var o, a = 1, s = t.length, u = e.length;
                    if (void 0 !== n && ("ucs2" === (n = String(n).toLowerCase()) || "ucs-2" === n || "utf16le" === n || "utf-16le" === n)) {
                        if (t.length < 2 || e.length < 2)
                            return -1;
                        s /= a = 2,
                            u /= 2,
                            r /= 2
                    }
                    function f(t, e) {
                        return 1 === a ? t[e] : t.readUInt16BE(e * a)
                    }
                    if (i) {
                        var c = -1;
                        for (o = r; o < s; o++)
                            if (f(t, o) === f(e, -1 === c ? 0 : o - c)) {
                                if (-1 === c && (c = o),
                                    o - c + 1 === u)
                                    return c * a
                            } else
                                -1 !== c && (o -= o - c),
                                    c = -1
                    } else
                        for (s < r + u && (r = s - u),
                            o = r; 0 <= o; o--) {
                            for (var h = !0, l = 0; l < u; l++)
                                if (f(t, o + l) !== f(e, l)) {
                                    h = !1;
                                    break
                                }
                            if (h)
                                return o
                        }
                    return -1
                }
                function v(t, e, r, n) {
                    r = Number(r) || 0;
                    var i = t.length - r;
                    (!n || i < (n = Number(n))) && (n = i);
                    var o = e.length;
                    o / 2 < n && (n = o / 2);
                    for (var a = 0; a < n; ++a) {
                        var s = parseInt(e.substr(2 * a, 2), 16);
                        if (L(s))
                            return a;
                        t[r + a] = s
                    }
                    return a
                }
                function g(t, e, r, n) {
                    return M(function (t) {
                        for (var e = [], r = 0; r < t.length; ++r)
                            e.push(255 & t.charCodeAt(r));
                        return e
                    }(e), t, r, n)
                }
                function b(t, e, r, n) {
                    return M(function (t, e) {
                        for (var r, n, i, o = [], a = 0; a < t.length && !((e -= 2) < 0); ++a)
                            r = t.charCodeAt(a),
                                n = r >> 8,
                                i = r % 256,
                                o.push(i),
                                o.push(n);
                        return o
                    }(e, t.length - r), t, r, n)
                }
                function w(t, e, r) {
                    return 0 === e && r === t.length ? n.fromByteArray(t) : n.fromByteArray(t.slice(e, r))
                }
                function m(t, e, r) {
                    r = Math.min(t.length, r);
                    for (var n = [], i = e; i < r;) {
                        var o, a, s, u, f = t[i], c = null, h = 239 < f ? 4 : 223 < f ? 3 : 191 < f ? 2 : 1;
                        if (i + h <= r)
                            switch (h) {
                                case 1:
                                    f < 128 && (c = f);
                                    break;
                                case 2:
                                    128 == (192 & (o = t[i + 1])) && 127 < (u = (31 & f) << 6 | 63 & o) && (c = u);
                                    break;
                                case 3:
                                    o = t[i + 1],
                                        a = t[i + 2],
                                        128 == (192 & o) && 128 == (192 & a) && 2047 < (u = (15 & f) << 12 | (63 & o) << 6 | 63 & a) && (u < 55296 || 57343 < u) && (c = u);
                                    break;
                                case 4:
                                    o = t[i + 1],
                                        a = t[i + 2],
                                        s = t[i + 3],
                                        128 == (192 & o) && 128 == (192 & a) && 128 == (192 & s) && 65535 < (u = (15 & f) << 18 | (63 & o) << 12 | (63 & a) << 6 | 63 & s) && u < 1114112 && (c = u)
                            }
                        null === c ? (c = 65533,
                            h = 1) : 65535 < c && (c -= 65536,
                                n.push(c >>> 10 & 1023 | 55296),
                                c = 56320 | 1023 & c),
                            n.push(c),
                            i += h
                    }
                    return function (t) {
                        var e = t.length;
                        if (e <= _)
                            return String.fromCharCode.apply(String, t);
                        var r = ""
                            , n = 0;
                        for (; n < e;)
                            r += String.fromCharCode.apply(String, t.slice(n, n += _));
                        return r
                    }(n)
                }
                F.kMaxLength = r,
                    (h.TYPED_ARRAY_SUPPORT = function () {
                        try {
                            var t = new Uint8Array(1)
                                , e = {
                                    foo: function () {
                                        return 42
                                    }
                                };
                            return Object.setPrototypeOf(e, Uint8Array.prototype),
                                Object.setPrototypeOf(t, e),
                                42 === t.foo()
                        } catch (t) {
                            return !1
                        }
                    }()) || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."),
                    Object.defineProperty(h.prototype, "parent", {
                        enumerable: !0,
                        get: function () {
                            if (h.isBuffer(this))
                                return this.buffer
                        }
                    }),
                    Object.defineProperty(h.prototype, "offset", {
                        enumerable: !0,
                        get: function () {
                            if (h.isBuffer(this))
                                return this.byteOffset
                        }
                    }),
                    "undefined" != typeof Symbol && null != Symbol.species && h[Symbol.species] === h && Object.defineProperty(h, Symbol.species, {
                        value: null,
                        configurable: !0,
                        enumerable: !1,
                        writable: !1
                    }),
                    h.poolSize = 8192,
                    h.from = function (t, e, r) {
                        return i(t, e, r)
                    }
                    ,
                    Object.setPrototypeOf(h.prototype, Uint8Array.prototype),
                    Object.setPrototypeOf(h, Uint8Array),
                    h.alloc = function (t, e, r) {
                        return i = e,
                            o = r,
                            s(n = t),
                            n <= 0 || void 0 === i ? a(n) : "string" == typeof o ? a(n).fill(i, o) : a(n).fill(i);
                        var n, i, o
                    }
                    ,
                    h.allocUnsafe = function (t) {
                        return u(t)
                    }
                    ,
                    h.allocUnsafeSlow = function (t) {
                        return u(t)
                    }
                    ,
                    h.isBuffer = function (t) {
                        return null != t && !0 === t._isBuffer && t !== h.prototype
                    }
                    ,
                    h.compare = function (t, e) {
                        if (R(t, Uint8Array) && (t = h.from(t, t.offset, t.byteLength)),
                            R(e, Uint8Array) && (e = h.from(e, e.offset, e.byteLength)),
                            !h.isBuffer(t) || !h.isBuffer(e))
                            throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
                        if (t === e)
                            return 0;
                        for (var r = t.length, n = e.length, i = 0, o = Math.min(r, n); i < o; ++i)
                            if (t[i] !== e[i]) {
                                r = t[i],
                                    n = e[i];
                                break
                            }
                        return r < n ? -1 : n < r ? 1 : 0
                    }
                    ,
                    h.isEncoding = function (t) {
                        switch (String(t).toLowerCase()) {
                            case "hex":
                            case "utf8":
                            case "utf-8":
                            case "ascii":
                            case "latin1":
                            case "binary":
                            case "base64":
                            case "ucs2":
                            case "ucs-2":
                            case "utf16le":
                            case "utf-16le":
                                return !0;
                            default:
                                return !1
                        }
                    }
                    ,
                    h.concat = function (t, e) {
                        if (!Array.isArray(t))
                            throw new TypeError('"list" argument must be an Array of Buffers');
                        if (0 === t.length)
                            return h.alloc(0);
                        var r;
                        if (void 0 === e)
                            for (r = e = 0; r < t.length; ++r)
                                e += t[r].length;
                        var n = h.allocUnsafe(e)
                            , i = 0;
                        for (r = 0; r < t.length; ++r) {
                            var o = t[r];
                            if (R(o, Uint8Array) && (o = h.from(o)),
                                !h.isBuffer(o))
                                throw new TypeError('"list" argument must be an Array of Buffers');
                            o.copy(n, i),
                                i += o.length
                        }
                        return n
                    }
                    ,
                    h.byteLength = l,
                    h.prototype._isBuffer = !0,
                    h.prototype.swap16 = function () {
                        var t = this.length;
                        if (t % 2 != 0)
                            throw new RangeError("Buffer size must be a multiple of 16-bits");
                        for (var e = 0; e < t; e += 2)
                            d(this, e, e + 1);
                        return this
                    }
                    ,
                    h.prototype.swap32 = function () {
                        var t = this.length;
                        if (t % 4 != 0)
                            throw new RangeError("Buffer size must be a multiple of 32-bits");
                        for (var e = 0; e < t; e += 4)
                            d(this, e, e + 3),
                                d(this, e + 1, e + 2);
                        return this
                    }
                    ,
                    h.prototype.swap64 = function () {
                        var t = this.length;
                        if (t % 8 != 0)
                            throw new RangeError("Buffer size must be a multiple of 64-bits");
                        for (var e = 0; e < t; e += 8)
                            d(this, e, e + 7),
                                d(this, e + 1, e + 6),
                                d(this, e + 2, e + 5),
                                d(this, e + 3, e + 4);
                        return this
                    }
                    ,
                    h.prototype.toLocaleString = h.prototype.toString = function () {
                        var t = this.length;
                        return 0 === t ? "" : 0 === arguments.length ? m(this, 0, t) : function (t, e, r) {
                            var n = !1;
                            if ((void 0 === e || e < 0) && (e = 0),
                                e > this.length)
                                return "";
                            if ((void 0 === r || r > this.length) && (r = this.length),
                                r <= 0)
                                return "";
                            if ((r >>>= 0) <= (e >>>= 0))
                                return "";
                            for (t = t || "utf8"; ;)
                                switch (t) {
                                    case "hex":
                                        return B(this, e, r);
                                    case "utf8":
                                    case "utf-8":
                                        return m(this, e, r);
                                    case "ascii":
                                        return A(this, e, r);
                                    case "latin1":
                                    case "binary":
                                        return E(this, e, r);
                                    case "base64":
                                        return w(this, e, r);
                                    case "ucs2":
                                    case "ucs-2":
                                    case "utf16le":
                                    case "utf-16le":
                                        return x(this, e, r);
                                    default:
                                        if (n)
                                            throw new TypeError("Unknown encoding: " + t);
                                        t = (t + "").toLowerCase(),
                                            n = !0
                                }
                        }
                            .apply(this, arguments)
                    }
                    ,
                    h.prototype.equals = function (t) {
                        if (!h.isBuffer(t))
                            throw new TypeError("Argument must be a Buffer");
                        return this === t || 0 === h.compare(this, t)
                    }
                    ,
                    h.prototype.inspect = function () {
                        var t = ""
                            , e = F.INSPECT_MAX_BYTES;
                        return t = this.toString("hex", 0, e).replace(/(.{2})/g, "$1 ").trim(),
                            this.length > e && (t += " ... "),
                            "<Buffer " + t + ">"
                    }
                    ,
                    t && (h.prototype[t] = h.prototype.inspect),
                    h.prototype.compare = function (t, e, r, n, i) {
                        if (R(t, Uint8Array) && (t = h.from(t, t.offset, t.byteLength)),
                            !h.isBuffer(t))
                            throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof t);
                        if (void 0 === e && (e = 0),
                            void 0 === r && (r = t ? t.length : 0),
                            void 0 === n && (n = 0),
                            void 0 === i && (i = this.length),
                            e < 0 || r > t.length || n < 0 || i > this.length)
                            throw new RangeError("out of range index");
                        if (i <= n && r <= e)
                            return 0;
                        if (i <= n)
                            return -1;
                        if (r <= e)
                            return 1;
                        if (this === t)
                            return 0;
                        for (var o = (i >>>= 0) - (n >>>= 0), a = (r >>>= 0) - (e >>>= 0), s = Math.min(o, a), u = this.slice(n, i), f = t.slice(e, r), c = 0; c < s; ++c)
                            if (u[c] !== f[c]) {
                                o = u[c],
                                    a = f[c];
                                break
                            }
                        return o < a ? -1 : a < o ? 1 : 0
                    }
                    ,
                    h.prototype.includes = function (t, e, r) {
                        return -1 !== this.indexOf(t, e, r)
                    }
                    ,
                    h.prototype.indexOf = function (t, e, r) {
                        return p(this, t, e, r, !0)
                    }
                    ,
                    h.prototype.lastIndexOf = function (t, e, r) {
                        return p(this, t, e, r, !1)
                    }
                    ,
                    h.prototype.write = function (t, e, r, n) {
                        if (void 0 === e)
                            n = "utf8",
                                r = this.length,
                                e = 0;
                        else if (void 0 === r && "string" == typeof e)
                            n = e,
                                r = this.length,
                                e = 0;
                        else {
                            if (!isFinite(e))
                                throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                            e >>>= 0,
                                isFinite(r) ? (r >>>= 0,
                                    void 0 === n && (n = "utf8")) : (n = r,
                                        r = void 0)
                        }
                        var i = this.length - e;
                        if ((void 0 === r || i < r) && (r = i),
                            0 < t.length && (r < 0 || e < 0) || e > this.length)
                            throw new RangeError("Attempt to write outside buffer bounds");
                        n = n || "utf8";
                        for (var o, a, s, u, f, c, h = !1; ;)
                            switch (n) {
                                case "hex":
                                    return v(this, t, e, r);
                                case "utf8":
                                case "utf-8":
                                    return f = e,
                                        c = r,
                                        M(I(t, (u = this).length - f), u, f, c);
                                case "ascii":
                                    return g(this, t, e, r);
                                case "latin1":
                                case "binary":
                                    return g(this, t, e, r);
                                case "base64":
                                    return o = this,
                                        a = e,
                                        s = r,
                                        M(O(t), o, a, s);
                                case "ucs2":
                                case "ucs-2":
                                case "utf16le":
                                case "utf-16le":
                                    return b(this, t, e, r);
                                default:
                                    if (h)
                                        throw new TypeError("Unknown encoding: " + n);
                                    n = ("" + n).toLowerCase(),
                                        h = !0
                            }
                    }
                    ,
                    h.prototype.toJSON = function () {
                        return {
                            type: "Buffer",
                            data: Array.prototype.slice.call(this._arr || this, 0)
                        }
                    }
                    ;
                var _ = 4096;
                function A(t, e, r) {
                    var n = "";
                    r = Math.min(t.length, r);
                    for (var i = e; i < r; ++i)
                        n += String.fromCharCode(127 & t[i]);
                    return n
                }
                function E(t, e, r) {
                    var n = "";
                    r = Math.min(t.length, r);
                    for (var i = e; i < r; ++i)
                        n += String.fromCharCode(t[i]);
                    return n
                }
                function B(t, e, r) {
                    var n = t.length;
                    (!e || e < 0) && (e = 0),
                        (!r || r < 0 || n < r) && (r = n);
                    for (var i = "", o = e; o < r; ++o)
                        i += H[t[o]];
                    return i
                }
                function x(t, e, r) {
                    for (var n = t.slice(e, r), i = "", o = 0; o < n.length; o += 2)
                        i += String.fromCharCode(n[o] + 256 * n[o + 1]);
                    return i
                }
                function k(t, e, r) {
                    if (t % 1 != 0 || t < 0)
                        throw new RangeError("offset is not uint");
                    if (r < t + e)
                        throw new RangeError("Trying to access beyond buffer length")
                }
                function U(t, e, r, n, i, o) {
                    if (!h.isBuffer(t))
                        throw new TypeError('"buffer" argument must be a Buffer instance');
                    if (i < e || e < o)
                        throw new RangeError('"value" argument is out of bounds');
                    if (r + n > t.length)
                        throw new RangeError("Index out of range")
                }
                function T(t, e, r, n) {
                    if (r + n > t.length)
                        throw new RangeError("Index out of range");
                    if (r < 0)
                        throw new RangeError("Index out of range")
                }
                function S(t, e, r, n, i) {
                    return e = +e,
                        r >>>= 0,
                        i || T(t, 0, r, 4),
                        o.write(t, e, r, n, 23, 4),
                        r + 4
                }
                function C(t, e, r, n, i) {
                    return e = +e,
                        r >>>= 0,
                        i || T(t, 0, r, 8),
                        o.write(t, e, r, n, 52, 8),
                        r + 8
                }
                h.prototype.slice = function (t, e) {
                    var r = this.length;
                    (t = ~~t) < 0 ? (t += r) < 0 && (t = 0) : r < t && (t = r),
                        (e = void 0 === e ? r : ~~e) < 0 ? (e += r) < 0 && (e = 0) : r < e && (e = r),
                        e < t && (e = t);
                    var n = this.subarray(t, e);
                    return Object.setPrototypeOf(n, h.prototype),
                        n
                }
                    ,
                    h.prototype.readUIntLE = function (t, e, r) {
                        t >>>= 0,
                            e >>>= 0,
                            r || k(t, e, this.length);
                        for (var n = this[t], i = 1, o = 0; ++o < e && (i *= 256);)
                            n += this[t + o] * i;
                        return n
                    }
                    ,
                    h.prototype.readUIntBE = function (t, e, r) {
                        t >>>= 0,
                            e >>>= 0,
                            r || k(t, e, this.length);
                        for (var n = this[t + --e], i = 1; 0 < e && (i *= 256);)
                            n += this[t + --e] * i;
                        return n
                    }
                    ,
                    h.prototype.readUInt8 = function (t, e) {
                        return t >>>= 0,
                            e || k(t, 1, this.length),
                            this[t]
                    }
                    ,
                    h.prototype.readUInt16LE = function (t, e) {
                        return t >>>= 0,
                            e || k(t, 2, this.length),
                            this[t] | this[t + 1] << 8
                    }
                    ,
                    h.prototype.readUInt16BE = function (t, e) {
                        return t >>>= 0,
                            e || k(t, 2, this.length),
                            this[t] << 8 | this[t + 1]
                    }
                    ,
                    h.prototype.readUInt32LE = function (t, e) {
                        return t >>>= 0,
                            e || k(t, 4, this.length),
                            (this[t] | this[t + 1] << 8 | this[t + 2] << 16) + 16777216 * this[t + 3]
                    }
                    ,
                    h.prototype.readUInt32BE = function (t, e) {
                        return t >>>= 0,
                            e || k(t, 4, this.length),
                            16777216 * this[t] + (this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3])
                    }
                    ,
                    h.prototype.readIntLE = function (t, e, r) {
                        t >>>= 0,
                            e >>>= 0,
                            r || k(t, e, this.length);
                        for (var n = this[t], i = 1, o = 0; ++o < e && (i *= 256);)
                            n += this[t + o] * i;
                        return (i *= 128) <= n && (n -= Math.pow(2, 8 * e)),
                            n
                    }
                    ,
                    h.prototype.readIntBE = function (t, e, r) {
                        t >>>= 0,
                            e >>>= 0,
                            r || k(t, e, this.length);
                        for (var n = e, i = 1, o = this[t + --n]; 0 < n && (i *= 256);)
                            o += this[t + --n] * i;
                        return (i *= 128) <= o && (o -= Math.pow(2, 8 * e)),
                            o
                    }
                    ,
                    h.prototype.readInt8 = function (t, e) {
                        return t >>>= 0,
                            e || k(t, 1, this.length),
                            128 & this[t] ? -1 * (255 - this[t] + 1) : this[t]
                    }
                    ,
                    h.prototype.readInt16LE = function (t, e) {
                        t >>>= 0,
                            e || k(t, 2, this.length);
                        var r = this[t] | this[t + 1] << 8;
                        return 32768 & r ? 4294901760 | r : r
                    }
                    ,
                    h.prototype.readInt16BE = function (t, e) {
                        t >>>= 0,
                            e || k(t, 2, this.length);
                        var r = this[t + 1] | this[t] << 8;
                        return 32768 & r ? 4294901760 | r : r
                    }
                    ,
                    h.prototype.readInt32LE = function (t, e) {
                        return t >>>= 0,
                            e || k(t, 4, this.length),
                            this[t] | this[t + 1] << 8 | this[t + 2] << 16 | this[t + 3] << 24
                    }
                    ,
                    h.prototype.readInt32BE = function (t, e) {
                        return t >>>= 0,
                            e || k(t, 4, this.length),
                            this[t] << 24 | this[t + 1] << 16 | this[t + 2] << 8 | this[t + 3]
                    }
                    ,
                    h.prototype.readFloatLE = function (t, e) {
                        return t >>>= 0,
                            e || k(t, 4, this.length),
                            o.read(this, t, !0, 23, 4)
                    }
                    ,
                    h.prototype.readFloatBE = function (t, e) {
                        return t >>>= 0,
                            e || k(t, 4, this.length),
                            o.read(this, t, !1, 23, 4)
                    }
                    ,
                    h.prototype.readDoubleLE = function (t, e) {
                        return t >>>= 0,
                            e || k(t, 8, this.length),
                            o.read(this, t, !0, 52, 8)
                    }
                    ,
                    h.prototype.readDoubleBE = function (t, e) {
                        return t >>>= 0,
                            e || k(t, 8, this.length),
                            o.read(this, t, !1, 52, 8)
                    }
                    ,
                    h.prototype.writeUIntLE = function (t, e, r, n) {
                        t = +t,
                            e >>>= 0,
                            r >>>= 0,
                            n || U(this, t, e, r, Math.pow(2, 8 * r) - 1, 0);
                        var i = 1
                            , o = 0;
                        for (this[e] = 255 & t; ++o < r && (i *= 256);)
                            this[e + o] = t / i & 255;
                        return e + r
                    }
                    ,
                    h.prototype.writeUIntBE = function (t, e, r, n) {
                        t = +t,
                            e >>>= 0,
                            r >>>= 0,
                            n || U(this, t, e, r, Math.pow(2, 8 * r) - 1, 0);
                        var i = r - 1
                            , o = 1;
                        for (this[e + i] = 255 & t; 0 <= --i && (o *= 256);)
                            this[e + i] = t / o & 255;
                        return e + r
                    }
                    ,
                    h.prototype.writeUInt8 = function (t, e, r) {
                        return t = +t,
                            e >>>= 0,
                            r || U(this, t, e, 1, 255, 0),
                            this[e] = 255 & t,
                            e + 1
                    }
                    ,
                    h.prototype.writeUInt16LE = function (t, e, r) {
                        return t = +t,
                            e >>>= 0,
                            r || U(this, t, e, 2, 65535, 0),
                            this[e] = 255 & t,
                            this[e + 1] = t >>> 8,
                            e + 2
                    }
                    ,
                    h.prototype.writeUInt16BE = function (t, e, r) {
                        return t = +t,
                            e >>>= 0,
                            r || U(this, t, e, 2, 65535, 0),
                            this[e] = t >>> 8,
                            this[e + 1] = 255 & t,
                            e + 2
                    }
                    ,
                    h.prototype.writeUInt32LE = function (t, e, r) {
                        return t = +t,
                            e >>>= 0,
                            r || U(this, t, e, 4, 4294967295, 0),
                            this[e + 3] = t >>> 24,
                            this[e + 2] = t >>> 16,
                            this[e + 1] = t >>> 8,
                            this[e] = 255 & t,
                            e + 4
                    }
                    ,
                    h.prototype.writeUInt32BE = function (t, e, r) {
                        return t = +t,
                            e >>>= 0,
                            r || U(this, t, e, 4, 4294967295, 0),
                            this[e] = t >>> 24,
                            this[e + 1] = t >>> 16,
                            this[e + 2] = t >>> 8,
                            this[e + 3] = 255 & t,
                            e + 4
                    }
                    ,
                    h.prototype.writeIntLE = function (t, e, r, n) {
                        if (t = +t,
                            e >>>= 0,
                            !n) {
                            var i = Math.pow(2, 8 * r - 1);
                            U(this, t, e, r, i - 1, -i)
                        }
                        var o = 0
                            , a = 1
                            , s = 0;
                        for (this[e] = 255 & t; ++o < r && (a *= 256);)
                            t < 0 && 0 === s && 0 !== this[e + o - 1] && (s = 1),
                                this[e + o] = (t / a >> 0) - s & 255;
                        return e + r
                    }
                    ,
                    h.prototype.writeIntBE = function (t, e, r, n) {
                        if (t = +t,
                            e >>>= 0,
                            !n) {
                            var i = Math.pow(2, 8 * r - 1);
                            U(this, t, e, r, i - 1, -i)
                        }
                        var o = r - 1
                            , a = 1
                            , s = 0;
                        for (this[e + o] = 255 & t; 0 <= --o && (a *= 256);)
                            t < 0 && 0 === s && 0 !== this[e + o + 1] && (s = 1),
                                this[e + o] = (t / a >> 0) - s & 255;
                        return e + r
                    }
                    ,
                    h.prototype.writeInt8 = function (t, e, r) {
                        return t = +t,
                            e >>>= 0,
                            r || U(this, t, e, 1, 127, -128),
                            t < 0 && (t = 255 + t + 1),
                            this[e] = 255 & t,
                            e + 1
                    }
                    ,
                    h.prototype.writeInt16LE = function (t, e, r) {
                        return t = +t,
                            e >>>= 0,
                            r || U(this, t, e, 2, 32767, -32768),
                            this[e] = 255 & t,
                            this[e + 1] = t >>> 8,
                            e + 2
                    }
                    ,
                    h.prototype.writeInt16BE = function (t, e, r) {
                        return t = +t,
                            e >>>= 0,
                            r || U(this, t, e, 2, 32767, -32768),
                            this[e] = t >>> 8,
                            this[e + 1] = 255 & t,
                            e + 2
                    }
                    ,
                    h.prototype.writeInt32LE = function (t, e, r) {
                        return t = +t,
                            e >>>= 0,
                            r || U(this, t, e, 4, 2147483647, -2147483648),
                            this[e] = 255 & t,
                            this[e + 1] = t >>> 8,
                            this[e + 2] = t >>> 16,
                            this[e + 3] = t >>> 24,
                            e + 4
                    }
                    ,
                    h.prototype.writeInt32BE = function (t, e, r) {
                        return t = +t,
                            e >>>= 0,
                            r || U(this, t, e, 4, 2147483647, -2147483648),
                            t < 0 && (t = 4294967295 + t + 1),
                            this[e] = t >>> 24,
                            this[e + 1] = t >>> 16,
                            this[e + 2] = t >>> 8,
                            this[e + 3] = 255 & t,
                            e + 4
                    }
                    ,
                    h.prototype.writeFloatLE = function (t, e, r) {
                        return S(this, t, e, !0, r)
                    }
                    ,
                    h.prototype.writeFloatBE = function (t, e, r) {
                        return S(this, t, e, !1, r)
                    }
                    ,
                    h.prototype.writeDoubleLE = function (t, e, r) {
                        return C(this, t, e, !0, r)
                    }
                    ,
                    h.prototype.writeDoubleBE = function (t, e, r) {
                        return C(this, t, e, !1, r)
                    }
                    ,
                    h.prototype.copy = function (t, e, r, n) {
                        if (!h.isBuffer(t))
                            throw new TypeError("argument should be a Buffer");
                        if (r = r || 0,
                            n || 0 === n || (n = this.length),
                            e >= t.length && (e = t.length),
                            e = e || 0,
                            0 < n && n < r && (n = r),
                            n === r)
                            return 0;
                        if (0 === t.length || 0 === this.length)
                            return 0;
                        if (e < 0)
                            throw new RangeError("targetStart out of bounds");
                        if (r < 0 || r >= this.length)
                            throw new RangeError("Index out of range");
                        if (n < 0)
                            throw new RangeError("sourceEnd out of bounds");
                        n > this.length && (n = this.length),
                            t.length - e < n - r && (n = t.length - e + r);
                        var i = n - r;
                        if (this === t && "function" == typeof Uint8Array.prototype.copyWithin)
                            this.copyWithin(e, r, n);
                        else if (this === t && r < e && e < n)
                            for (var o = i - 1; 0 <= o; --o)
                                t[o + e] = this[o + r];
                        else
                            Uint8Array.prototype.set.call(t, this.subarray(r, n), e);
                        return i
                    }
                    ,
                    h.prototype.fill = function (t, e, r, n) {
                        if ("string" == typeof t) {
                            if ("string" == typeof e ? (n = e,
                                e = 0,
                                r = this.length) : "string" == typeof r && (n = r,
                                    r = this.length),
                                void 0 !== n && "string" != typeof n)
                                throw new TypeError("encoding must be a string");
                            if ("string" == typeof n && !h.isEncoding(n))
                                throw new TypeError("Unknown encoding: " + n);
                            if (1 === t.length) {
                                var i = t.charCodeAt(0);
                                ("utf8" === n && i < 128 || "latin1" === n) && (t = i)
                            }
                        } else
                            "number" == typeof t ? t &= 255 : "boolean" == typeof t && (t = Number(t));
                        if (e < 0 || this.length < e || this.length < r)
                            throw new RangeError("Out of range index");
                        if (r <= e)
                            return this;
                        var o;
                        if (e >>>= 0,
                            r = void 0 === r ? this.length : r >>> 0,
                            "number" == typeof (t = t || 0))
                            for (o = e; o < r; ++o)
                                this[o] = t;
                        else {
                            var a = h.isBuffer(t) ? t : h.from(t, n)
                                , s = a.length;
                            if (0 === s)
                                throw new TypeError('The value "' + t + '" is invalid for argument "value"');
                            for (o = 0; o < r - e; ++o)
                                this[o + e] = a[o % s]
                        }
                        return this
                    }
                    ;
                var e = /[^+/0-9A-Za-z-_]/g;
                function I(t, e) {
                    var r;
                    e = e || 1 / 0;
                    for (var n = t.length, i = null, o = [], a = 0; a < n; ++a) {
                        if (55295 < (r = t.charCodeAt(a)) && r < 57344) {
                            if (!i) {
                                if (56319 < r) {
                                    -1 < (e -= 3) && o.push(239, 191, 189);
                                    continue
                                }
                                if (a + 1 === n) {
                                    -1 < (e -= 3) && o.push(239, 191, 189);
                                    continue
                                }
                                i = r;
                                continue
                            }
                            if (r < 56320) {
                                -1 < (e -= 3) && o.push(239, 191, 189),
                                    i = r;
                                continue
                            }
                            r = 65536 + (i - 55296 << 10 | r - 56320)
                        } else
                            i && -1 < (e -= 3) && o.push(239, 191, 189);
                        if (i = null,
                            r < 128) {
                            if (--e < 0)
                                break;
                            o.push(r)
                        } else if (r < 2048) {
                            if ((e -= 2) < 0)
                                break;
                            o.push(r >> 6 | 192, 63 & r | 128)
                        } else if (r < 65536) {
                            if ((e -= 3) < 0)
                                break;
                            o.push(r >> 12 | 224, r >> 6 & 63 | 128, 63 & r | 128)
                        } else {
                            if (!(r < 1114112))
                                throw new Error("Invalid code point");
                            if ((e -= 4) < 0)
                                break;
                            o.push(r >> 18 | 240, r >> 12 & 63 | 128, r >> 6 & 63 | 128, 63 & r | 128)
                        }
                    }
                    return o
                }
                function O(t) {
                    return n.toByteArray(function (t) {
                        if ((t = (t = t.split("=")[0]).trim().replace(e, "")).length < 2)
                            return "";
                        for (; t.length % 4 != 0;)
                            t += "=";
                        return t
                    }(t))
                }
                function M(t, e, r, n) {
                    for (var i = 0; i < n && !(i + r >= e.length || i >= t.length); ++i)
                        e[i + r] = t[i];
                    return i
                }
                function R(t, e) {
                    return t instanceof e || null != t && null != t.constructor && null != t.constructor.name && t.constructor.name === e.name
                }
                function L(t) {
                    return t != t
                }
                var H = function () {
                    for (var t = "0123456789abcdef", e = new Array(256), r = 0; r < 16; ++r)
                        for (var n = 16 * r, i = 0; i < 16; ++i)
                            e[n + i] = t[r] + t[i];
                    return e
                }()
            }
            ).call(this, j("buffer").Buffer)
        }
            , {
            "base64-js": 2,
            buffer: 3,
            ieee754: 29
        }],
        4: [function (t, e, r) {
            "use strict";
            e.exports = t("./es6/crc1").default
        }
            , {
            "./es6/crc1": 15
        }],
        5: [function (t, e, r) {
            "use strict";
            e.exports = t("./es6/crc16").default
        }
            , {
            "./es6/crc16": 16
        }],
        6: [function (t, e, r) {
            "use strict";
            e.exports = t("./es6/crc16ccitt").default
        }
            , {
            "./es6/crc16ccitt": 17
        }],
        7: [function (t, e, r) {
            "use strict";
            e.exports = t("./es6/crc16kermit").default
        }
            , {
            "./es6/crc16kermit": 18
        }],
        8: [function (t, e, r) {
            "use strict";
            e.exports = t("./es6/crc16modbus").default
        }
            , {
            "./es6/crc16modbus": 19
        }],
        9: [function (t, e, r) {
            "use strict";
            e.exports = t("./es6/crc16xmodem").default
        }
            , {
            "./es6/crc16xmodem": 20
        }],
        10: [function (t, e, r) {
            "use strict";
            e.exports = t("./es6/crc24").default
        }
            , {
            "./es6/crc24": 21
        }],
        11: [function (t, e, r) {
            "use strict";
            e.exports = t("./es6/crc32").default
        }
            , {
            "./es6/crc32": 22
        }],
        12: [function (t, e, r) {
            "use strict";
            e.exports = t("./es6/crc8").default
        }
            , {
            "./es6/crc8": 23
        }],
        13: [function (t, e, r) {
            "use strict";
            e.exports = t("./es6/crc81wire").default
        }
            , {
            "./es6/crc81wire": 24
        }],
        14: [function (t, e, r) {
            "use strict";
            e.exports = t("./es6/crcjam").default
        }
            , {
            "./es6/crcjam": 25
        }],
        15: [function (t, e, r) {
            "use strict";
            Object.defineProperty(r, "__esModule", {
                value: !0
            });
            var o = t("buffer")
                , a = n(t("./create_buffer"));
            function n(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }
            var i = (0,
                n(t("./define_crc")).default)("crc1", function (t, e) {
                    o.Buffer.isBuffer(t) || (t = (0,
                        a.default)(t));
                    for (var r = ~~e, n = 0, i = 0; i < t.length; i++) {
                        n += t[i]
                    }
                    return (r += n % 256) % 256
                });
            r.default = i
        }
            , {
            "./create_buffer": 26,
            "./define_crc": 27,
            buffer: 3
        }],
        16: [function (t, e, r) {
            "use strict";
            Object.defineProperty(r, "__esModule", {
                value: !0
            });
            var o = t("buffer")
                , a = i(t("./create_buffer"))
                , n = i(t("./define_crc"));
            function i(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }
            var s = [0, 49345, 49537, 320, 49921, 960, 640, 49729, 50689, 1728, 1920, 51009, 1280, 50625, 50305, 1088, 52225, 3264, 3456, 52545, 3840, 53185, 52865, 3648, 2560, 51905, 52097, 2880, 51457, 2496, 2176, 51265, 55297, 6336, 6528, 55617, 6912, 56257, 55937, 6720, 7680, 57025, 57217, 8e3, 56577, 7616, 7296, 56385, 5120, 54465, 54657, 5440, 55041, 6080, 5760, 54849, 53761, 4800, 4992, 54081, 4352, 53697, 53377, 4160, 61441, 12480, 12672, 61761, 13056, 62401, 62081, 12864, 13824, 63169, 63361, 14144, 62721, 13760, 13440, 62529, 15360, 64705, 64897, 15680, 65281, 16320, 16e3, 65089, 64001, 15040, 15232, 64321, 14592, 63937, 63617, 14400, 10240, 59585, 59777, 10560, 60161, 11200, 10880, 59969, 60929, 11968, 12160, 61249, 11520, 60865, 60545, 11328, 58369, 9408, 9600, 58689, 9984, 59329, 59009, 9792, 8704, 58049, 58241, 9024, 57601, 8640, 8320, 57409, 40961, 24768, 24960, 41281, 25344, 41921, 41601, 25152, 26112, 42689, 42881, 26432, 42241, 26048, 25728, 42049, 27648, 44225, 44417, 27968, 44801, 28608, 28288, 44609, 43521, 27328, 27520, 43841, 26880, 43457, 43137, 26688, 30720, 47297, 47489, 31040, 47873, 31680, 31360, 47681, 48641, 32448, 32640, 48961, 32e3, 48577, 48257, 31808, 46081, 29888, 30080, 46401, 30464, 47041, 46721, 30272, 29184, 45761, 45953, 29504, 45313, 29120, 28800, 45121, 20480, 37057, 37249, 20800, 37633, 21440, 21120, 37441, 38401, 22208, 22400, 38721, 21760, 38337, 38017, 21568, 39937, 23744, 23936, 40257, 24320, 40897, 40577, 24128, 23040, 39617, 39809, 23360, 39169, 22976, 22656, 38977, 34817, 18624, 18816, 35137, 19200, 35777, 35457, 19008, 19968, 36545, 36737, 20288, 36097, 19904, 19584, 35905, 17408, 33985, 34177, 17728, 34561, 18368, 18048, 34369, 33281, 17088, 17280, 33601, 16640, 33217, 32897, 16448];
            "undefined" != typeof Int32Array && (s = new Int32Array(s));
            var u = (0,
                n.default)("crc-16", function (t, e) {
                    o.Buffer.isBuffer(t) || (t = (0,
                        a.default)(t));
                    for (var r = ~~e, n = 0; n < t.length; n++) {
                        var i = t[n];
                        r = 65535 & (s[255 & (r ^ i)] ^ r >> 8)
                    }
                    return r
                });
            r.default = u
        }
            , {
            "./create_buffer": 26,
            "./define_crc": 27,
            buffer: 3
        }],
        17: [function (t, e, r) {
            "use strict";
            Object.defineProperty(r, "__esModule", {
                value: !0
            });
            var o = t("buffer")
                , a = i(t("./create_buffer"))
                , n = i(t("./define_crc"));
            function i(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }
            var s = [0, 4129, 8258, 12387, 16516, 20645, 24774, 28903, 33032, 37161, 41290, 45419, 49548, 53677, 57806, 61935, 4657, 528, 12915, 8786, 21173, 17044, 29431, 25302, 37689, 33560, 45947, 41818, 54205, 50076, 62463, 58334, 9314, 13379, 1056, 5121, 25830, 29895, 17572, 21637, 42346, 46411, 34088, 38153, 58862, 62927, 50604, 54669, 13907, 9842, 5649, 1584, 30423, 26358, 22165, 18100, 46939, 42874, 38681, 34616, 63455, 59390, 55197, 51132, 18628, 22757, 26758, 30887, 2112, 6241, 10242, 14371, 51660, 55789, 59790, 63919, 35144, 39273, 43274, 47403, 23285, 19156, 31415, 27286, 6769, 2640, 14899, 10770, 56317, 52188, 64447, 60318, 39801, 35672, 47931, 43802, 27814, 31879, 19684, 23749, 11298, 15363, 3168, 7233, 60846, 64911, 52716, 56781, 44330, 48395, 36200, 40265, 32407, 28342, 24277, 20212, 15891, 11826, 7761, 3696, 65439, 61374, 57309, 53244, 48923, 44858, 40793, 36728, 37256, 33193, 45514, 41451, 53516, 49453, 61774, 57711, 4224, 161, 12482, 8419, 20484, 16421, 28742, 24679, 33721, 37784, 41979, 46042, 49981, 54044, 58239, 62302, 689, 4752, 8947, 13010, 16949, 21012, 25207, 29270, 46570, 42443, 38312, 34185, 62830, 58703, 54572, 50445, 13538, 9411, 5280, 1153, 29798, 25671, 21540, 17413, 42971, 47098, 34713, 38840, 59231, 63358, 50973, 55100, 9939, 14066, 1681, 5808, 26199, 30326, 17941, 22068, 55628, 51565, 63758, 59695, 39368, 35305, 47498, 43435, 22596, 18533, 30726, 26663, 6336, 2273, 14466, 10403, 52093, 56156, 60223, 64286, 35833, 39896, 43963, 48026, 19061, 23124, 27191, 31254, 2801, 6864, 10931, 14994, 64814, 60687, 56684, 52557, 48554, 44427, 40424, 36297, 31782, 27655, 23652, 19525, 15522, 11395, 7392, 3265, 61215, 65342, 53085, 57212, 44955, 49082, 36825, 40952, 28183, 32310, 20053, 24180, 11923, 16050, 3793, 7920];
            "undefined" != typeof Int32Array && (s = new Int32Array(s));
            var u = (0,
                n.default)("ccitt", function (t, e) {
                    o.Buffer.isBuffer(t) || (t = (0,
                        a.default)(t));
                    for (var r = void 0 !== e ? ~~e : 65535, n = 0; n < t.length; n++) {
                        var i = t[n];
                        r = 65535 & (s[255 & (r >> 8 ^ i)] ^ r << 8)
                    }
                    return r
                });
            r.default = u
        }
            , {
            "./create_buffer": 26,
            "./define_crc": 27,
            buffer: 3
        }],
        18: [function (t, e, r) {
            "use strict";
            Object.defineProperty(r, "__esModule", {
                value: !0
            });
            var o = t("buffer")
                , a = i(t("./create_buffer"))
                , n = i(t("./define_crc"));
            function i(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }
            var s = [0, 4489, 8978, 12955, 17956, 22445, 25910, 29887, 35912, 40385, 44890, 48851, 51820, 56293, 59774, 63735, 4225, 264, 13203, 8730, 22181, 18220, 30135, 25662, 40137, 36160, 49115, 44626, 56045, 52068, 63999, 59510, 8450, 12427, 528, 5017, 26406, 30383, 17460, 21949, 44362, 48323, 36440, 40913, 60270, 64231, 51324, 55797, 12675, 8202, 4753, 792, 30631, 26158, 21685, 17724, 48587, 44098, 40665, 36688, 64495, 60006, 55549, 51572, 16900, 21389, 24854, 28831, 1056, 5545, 10034, 14011, 52812, 57285, 60766, 64727, 34920, 39393, 43898, 47859, 21125, 17164, 29079, 24606, 5281, 1320, 14259, 9786, 57037, 53060, 64991, 60502, 39145, 35168, 48123, 43634, 25350, 29327, 16404, 20893, 9506, 13483, 1584, 6073, 61262, 65223, 52316, 56789, 43370, 47331, 35448, 39921, 29575, 25102, 20629, 16668, 13731, 9258, 5809, 1848, 65487, 60998, 56541, 52564, 47595, 43106, 39673, 35696, 33800, 38273, 42778, 46739, 49708, 54181, 57662, 61623, 2112, 6601, 11090, 15067, 20068, 24557, 28022, 31999, 38025, 34048, 47003, 42514, 53933, 49956, 61887, 57398, 6337, 2376, 15315, 10842, 24293, 20332, 32247, 27774, 42250, 46211, 34328, 38801, 58158, 62119, 49212, 53685, 10562, 14539, 2640, 7129, 28518, 32495, 19572, 24061, 46475, 41986, 38553, 34576, 62383, 57894, 53437, 49460, 14787, 10314, 6865, 2904, 32743, 28270, 23797, 19836, 50700, 55173, 58654, 62615, 32808, 37281, 41786, 45747, 19012, 23501, 26966, 30943, 3168, 7657, 12146, 16123, 54925, 50948, 62879, 58390, 37033, 33056, 46011, 41522, 23237, 19276, 31191, 26718, 7393, 3432, 16371, 11898, 59150, 63111, 50204, 54677, 41258, 45219, 33336, 37809, 27462, 31439, 18516, 23005, 11618, 15595, 3696, 8185, 63375, 58886, 54429, 50452, 45483, 40994, 37561, 33584, 31687, 27214, 22741, 18780, 15843, 11370, 7921, 3960];
            "undefined" != typeof Int32Array && (s = new Int32Array(s));
            var u = (0,
                n.default)("kermit", function (t, e) {
                    o.Buffer.isBuffer(t) || (t = (0,
                        a.default)(t));
                    for (var r = void 0 !== e ? ~~e : 0, n = 0; n < t.length; n++) {
                        var i = t[n];
                        r = 65535 & (s[255 & (r ^ i)] ^ r >> 8)
                    }
                    return r
                });
            r.default = u
        }
            , {
            "./create_buffer": 26,
            "./define_crc": 27,
            buffer: 3
        }],
        19: [function (t, e, r) {
            "use strict";
            Object.defineProperty(r, "__esModule", {
                value: !0
            });
            var o = t("buffer")
                , a = i(t("./create_buffer"))
                , n = i(t("./define_crc"));
            function i(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }
            var s = [0, 49345, 49537, 320, 49921, 960, 640, 49729, 50689, 1728, 1920, 51009, 1280, 50625, 50305, 1088, 52225, 3264, 3456, 52545, 3840, 53185, 52865, 3648, 2560, 51905, 52097, 2880, 51457, 2496, 2176, 51265, 55297, 6336, 6528, 55617, 6912, 56257, 55937, 6720, 7680, 57025, 57217, 8e3, 56577, 7616, 7296, 56385, 5120, 54465, 54657, 5440, 55041, 6080, 5760, 54849, 53761, 4800, 4992, 54081, 4352, 53697, 53377, 4160, 61441, 12480, 12672, 61761, 13056, 62401, 62081, 12864, 13824, 63169, 63361, 14144, 62721, 13760, 13440, 62529, 15360, 64705, 64897, 15680, 65281, 16320, 16e3, 65089, 64001, 15040, 15232, 64321, 14592, 63937, 63617, 14400, 10240, 59585, 59777, 10560, 60161, 11200, 10880, 59969, 60929, 11968, 12160, 61249, 11520, 60865, 60545, 11328, 58369, 9408, 9600, 58689, 9984, 59329, 59009, 9792, 8704, 58049, 58241, 9024, 57601, 8640, 8320, 57409, 40961, 24768, 24960, 41281, 25344, 41921, 41601, 25152, 26112, 42689, 42881, 26432, 42241, 26048, 25728, 42049, 27648, 44225, 44417, 27968, 44801, 28608, 28288, 44609, 43521, 27328, 27520, 43841, 26880, 43457, 43137, 26688, 30720, 47297, 47489, 31040, 47873, 31680, 31360, 47681, 48641, 32448, 32640, 48961, 32e3, 48577, 48257, 31808, 46081, 29888, 30080, 46401, 30464, 47041, 46721, 30272, 29184, 45761, 45953, 29504, 45313, 29120, 28800, 45121, 20480, 37057, 37249, 20800, 37633, 21440, 21120, 37441, 38401, 22208, 22400, 38721, 21760, 38337, 38017, 21568, 39937, 23744, 23936, 40257, 24320, 40897, 40577, 24128, 23040, 39617, 39809, 23360, 39169, 22976, 22656, 38977, 34817, 18624, 18816, 35137, 19200, 35777, 35457, 19008, 19968, 36545, 36737, 20288, 36097, 19904, 19584, 35905, 17408, 33985, 34177, 17728, 34561, 18368, 18048, 34369, 33281, 17088, 17280, 33601, 16640, 33217, 32897, 16448];
            "undefined" != typeof Int32Array && (s = new Int32Array(s));
            var u = (0,
                n.default)("crc-16-modbus", function (t, e) {
                    o.Buffer.isBuffer(t) || (t = (0,
                        a.default)(t));
                    for (var r = void 0 !== e ? ~~e : 65535, n = 0; n < t.length; n++) {
                        var i = t[n];
                        r = 65535 & (s[255 & (r ^ i)] ^ r >> 8)
                    }
                    return r
                });
            r.default = u
        }
            , {
            "./create_buffer": 26,
            "./define_crc": 27,
            buffer: 3
        }],
        20: [function (t, e, r) {
            "use strict";
            Object.defineProperty(r, "__esModule", {
                value: !0
            });
            var o = t("buffer")
                , a = n(t("./create_buffer"));
            function n(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }
            var i = (0,
                n(t("./define_crc")).default)("xmodem", function (t, e) {
                    o.Buffer.isBuffer(t) || (t = (0,
                        a.default)(t));
                    for (var r = void 0 !== e ? ~~e : 0, n = 0; n < t.length; n++) {
                        var i = r >>> 8 & 255;
                        i ^= 255 & t[n],
                            r = r << 8 & 65535,
                            r ^= i ^= i >>> 4,
                            r ^= i = i << 5 & 65535,
                            r ^= i = i << 7 & 65535
                    }
                    return r
                });
            r.default = i
        }
            , {
            "./create_buffer": 26,
            "./define_crc": 27,
            buffer: 3
        }],
        21: [function (t, e, r) {
            "use strict";
            Object.defineProperty(r, "__esModule", {
                value: !0
            });
            var o = t("buffer")
                , a = i(t("./create_buffer"))
                , n = i(t("./define_crc"));
            function i(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }
            var s = [0, 8801531, 9098509, 825846, 9692897, 1419802, 1651692, 10452759, 10584377, 2608578, 2839604, 11344079, 3303384, 11807523, 12104405, 4128302, 12930697, 4391538, 5217156, 13227903, 5679208, 13690003, 14450021, 5910942, 6606768, 14844747, 15604413, 6837830, 16197969, 7431594, 8256604, 16494759, 840169, 9084178, 8783076, 18463, 10434312, 1670131, 1434117, 9678590, 11358416, 2825259, 2590173, 10602790, 4109873, 12122826, 11821884, 3289031, 13213536, 5231515, 4409965, 12912278, 5929345, 14431610, 13675660, 5693559, 6823513, 15618722, 14863188, 6588335, 16513208, 8238147, 7417269, 16212302, 1680338, 10481449, 9664223, 1391140, 9061683, 788936, 36926, 8838341, 12067563, 4091408, 3340262, 11844381, 2868234, 11372785, 10555655, 2579964, 14478683, 5939616, 5650518, 13661357, 5180346, 13190977, 12967607, 4428364, 8219746, 16457881, 16234863, 7468436, 15633027, 6866552, 6578062, 14816117, 1405499, 9649856, 10463030, 1698765, 8819930, 55329, 803287, 9047340, 11858690, 3325945, 4072975, 12086004, 2561507, 10574104, 11387118, 2853909, 13647026, 5664841, 5958079, 14460228, 4446803, 12949160, 13176670, 5194661, 7454091, 16249200, 16476294, 8201341, 14834538, 6559633, 6852199, 15647388, 3360676, 11864927, 12161705, 4185682, 10527045, 2551230, 2782280, 11286707, 9619101, 1346150, 1577872, 10379115, 73852, 8875143, 9172337, 899466, 16124205, 7357910, 8182816, 16421083, 6680524, 14918455, 15678145, 6911546, 5736468, 13747439, 14507289, 5968354, 12873461, 4334094, 5159928, 13170435, 4167245, 12180150, 11879232, 3346363, 11301036, 2767959, 2532769, 10545498, 10360692, 1596303, 1360505, 9604738, 913813, 9157998, 8856728, 92259, 16439492, 8164415, 7343561, 16138546, 6897189, 15692510, 14936872, 6662099, 5986813, 14488838, 13733104, 5750795, 13156124, 5174247, 4352529, 12855018, 2810998, 11315341, 10498427, 2522496, 12124823, 4148844, 3397530, 11901793, 9135439, 862644, 110658, 8912057, 1606574, 10407765, 9590435, 1317464, 15706879, 6940164, 6651890, 14889737, 8145950, 16384229, 16161043, 7394792, 5123014, 13133629, 12910283, 4370992, 14535975, 5997020, 5707818, 13718737, 2504095, 10516836, 11329682, 2796649, 11916158, 3383173, 4130419, 12143240, 8893606, 129117, 876971, 9121104, 1331783, 9576124, 10389322, 1625009, 14908182, 6633453, 6925851, 15721184, 7380471, 16175372, 16402682, 8127489, 4389423, 12891860, 13119266, 5137369, 13704398, 5722165, 6015427, 14517560];
            "undefined" != typeof Int32Array && (s = new Int32Array(s));
            var u = (0,
                n.default)("crc-24", function (t, e) {
                    o.Buffer.isBuffer(t) || (t = (0,
                        a.default)(t));
                    for (var r = void 0 !== e ? ~~e : 11994318, n = 0; n < t.length; n++) {
                        var i = t[n];
                        r = 16777215 & (s[255 & (r >> 16 ^ i)] ^ r << 8)
                    }
                    return r
                });
            r.default = u
        }
            , {
            "./create_buffer": 26,
            "./define_crc": 27,
            buffer: 3
        }],
        22: [function (t, e, r) {
            "use strict";
            Object.defineProperty(r, "__esModule", {
                value: !0
            });
            var o = t("buffer")
                , a = i(t("./create_buffer"))
                , n = i(t("./define_crc"));
            function i(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }
            var s = [0, 1996959894, 3993919788, 2567524794, 124634137, 1886057615, 3915621685, 2657392035, 249268274, 2044508324, 3772115230, 2547177864, 162941995, 2125561021, 3887607047, 2428444049, 498536548, 1789927666, 4089016648, 2227061214, 450548861, 1843258603, 4107580753, 2211677639, 325883990, 1684777152, 4251122042, 2321926636, 335633487, 1661365465, 4195302755, 2366115317, 997073096, 1281953886, 3579855332, 2724688242, 1006888145, 1258607687, 3524101629, 2768942443, 901097722, 1119000684, 3686517206, 2898065728, 853044451, 1172266101, 3705015759, 2882616665, 651767980, 1373503546, 3369554304, 3218104598, 565507253, 1454621731, 3485111705, 3099436303, 671266974, 1594198024, 3322730930, 2970347812, 795835527, 1483230225, 3244367275, 3060149565, 1994146192, 31158534, 2563907772, 4023717930, 1907459465, 112637215, 2680153253, 3904427059, 2013776290, 251722036, 2517215374, 3775830040, 2137656763, 141376813, 2439277719, 3865271297, 1802195444, 476864866, 2238001368, 4066508878, 1812370925, 453092731, 2181625025, 4111451223, 1706088902, 314042704, 2344532202, 4240017532, 1658658271, 366619977, 2362670323, 4224994405, 1303535960, 984961486, 2747007092, 3569037538, 1256170817, 1037604311, 2765210733, 3554079995, 1131014506, 879679996, 2909243462, 3663771856, 1141124467, 855842277, 2852801631, 3708648649, 1342533948, 654459306, 3188396048, 3373015174, 1466479909, 544179635, 3110523913, 3462522015, 1591671054, 702138776, 2966460450, 3352799412, 1504918807, 783551873, 3082640443, 3233442989, 3988292384, 2596254646, 62317068, 1957810842, 3939845945, 2647816111, 81470997, 1943803523, 3814918930, 2489596804, 225274430, 2053790376, 3826175755, 2466906013, 167816743, 2097651377, 4027552580, 2265490386, 503444072, 1762050814, 4150417245, 2154129355, 426522225, 1852507879, 4275313526, 2312317920, 282753626, 1742555852, 4189708143, 2394877945, 397917763, 1622183637, 3604390888, 2714866558, 953729732, 1340076626, 3518719985, 2797360999, 1068828381, 1219638859, 3624741850, 2936675148, 906185462, 1090812512, 3747672003, 2825379669, 829329135, 1181335161, 3412177804, 3160834842, 628085408, 1382605366, 3423369109, 3138078467, 570562233, 1426400815, 3317316542, 2998733608, 733239954, 1555261956, 3268935591, 3050360625, 752459403, 1541320221, 2607071920, 3965973030, 1969922972, 40735498, 2617837225, 3943577151, 1913087877, 83908371, 2512341634, 3803740692, 2075208622, 213261112, 2463272603, 3855990285, 2094854071, 198958881, 2262029012, 4057260610, 1759359992, 534414190, 2176718541, 4139329115, 1873836001, 414664567, 2282248934, 4279200368, 1711684554, 285281116, 2405801727, 4167216745, 1634467795, 376229701, 2685067896, 3608007406, 1308918612, 956543938, 2808555105, 3495958263, 1231636301, 1047427035, 2932959818, 3654703836, 1088359270, 936918e3, 2847714899, 3736837829, 1202900863, 817233897, 3183342108, 3401237130, 1404277552, 615818150, 3134207493, 3453421203, 1423857449, 601450431, 3009837614, 3294710456, 1567103746, 711928724, 3020668471, 3272380065, 1510334235, 755167117];
            "undefined" != typeof Int32Array && (s = new Int32Array(s));
            var u = (0,
                n.default)("crc-32", function (t, e) {
                    o.Buffer.isBuffer(t) || (t = (0,
                        a.default)(t));
                    for (var r = 0 === e ? 0 : -1 ^ ~~e, n = 0; n < t.length; n++) {
                        var i = t[n];
                        r = s[255 & (r ^ i)] ^ r >>> 8
                    }
                    return -1 ^ r
                });
            r.default = u
        }
            , {
            "./create_buffer": 26,
            "./define_crc": 27,
            buffer: 3
        }],
        23: [function (t, e, r) {
            "use strict";
            Object.defineProperty(r, "__esModule", {
                value: !0
            });
            var o = t("buffer")
                , a = i(t("./create_buffer"))
                , n = i(t("./define_crc"));
            function i(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }
            var s = [0, 7, 14, 9, 28, 27, 18, 21, 56, 63, 54, 49, 36, 35, 42, 45, 112, 119, 126, 121, 108, 107, 98, 101, 72, 79, 70, 65, 84, 83, 90, 93, 224, 231, 238, 233, 252, 251, 242, 245, 216, 223, 214, 209, 196, 195, 202, 205, 144, 151, 158, 153, 140, 139, 130, 133, 168, 175, 166, 161, 180, 179, 186, 189, 199, 192, 201, 206, 219, 220, 213, 210, 255, 248, 241, 246, 227, 228, 237, 234, 183, 176, 185, 190, 171, 172, 165, 162, 143, 136, 129, 134, 147, 148, 157, 154, 39, 32, 41, 46, 59, 60, 53, 50, 31, 24, 17, 22, 3, 4, 13, 10, 87, 80, 89, 94, 75, 76, 69, 66, 111, 104, 97, 102, 115, 116, 125, 122, 137, 142, 135, 128, 149, 146, 155, 156, 177, 182, 191, 184, 173, 170, 163, 164, 249, 254, 247, 240, 229, 226, 235, 236, 193, 198, 207, 200, 221, 218, 211, 212, 105, 110, 103, 96, 117, 114, 123, 124, 81, 86, 95, 88, 77, 74, 67, 68, 25, 30, 23, 16, 5, 2, 11, 12, 33, 38, 47, 40, 61, 58, 51, 52, 78, 73, 64, 71, 82, 85, 92, 91, 118, 113, 120, 127, 106, 109, 100, 99, 62, 57, 48, 55, 34, 37, 44, 43, 6, 1, 8, 15, 26, 29, 20, 19, 174, 169, 160, 167, 178, 181, 188, 187, 150, 145, 152, 159, 138, 141, 132, 131, 222, 217, 208, 215, 194, 197, 204, 203, 230, 225, 232, 239, 250, 253, 244, 243];
            "undefined" != typeof Int32Array && (s = new Int32Array(s));
            var u = (0,
                n.default)("crc-8", function (t, e) {
                    o.Buffer.isBuffer(t) || (t = (0,
                        a.default)(t));
                    for (var r = ~~e, n = 0; n < t.length; n++) {
                        var i = t[n];
                        r = 255 & s[255 & (r ^ i)]
                    }
                    return r
                });
            r.default = u
        }
            , {
            "./create_buffer": 26,
            "./define_crc": 27,
            buffer: 3
        }],
        24: [function (t, e, r) {
            "use strict";
            Object.defineProperty(r, "__esModule", {
                value: !0
            });
            var o = t("buffer")
                , a = i(t("./create_buffer"))
                , n = i(t("./define_crc"));
            function i(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }
            var s = [0, 94, 188, 226, 97, 63, 221, 131, 194, 156, 126, 32, 163, 253, 31, 65, 157, 195, 33, 127, 252, 162, 64, 30, 95, 1, 227, 189, 62, 96, 130, 220, 35, 125, 159, 193, 66, 28, 254, 160, 225, 191, 93, 3, 128, 222, 60, 98, 190, 224, 2, 92, 223, 129, 99, 61, 124, 34, 192, 158, 29, 67, 161, 255, 70, 24, 250, 164, 39, 121, 155, 197, 132, 218, 56, 102, 229, 187, 89, 7, 219, 133, 103, 57, 186, 228, 6, 88, 25, 71, 165, 251, 120, 38, 196, 154, 101, 59, 217, 135, 4, 90, 184, 230, 167, 249, 27, 69, 198, 152, 122, 36, 248, 166, 68, 26, 153, 199, 37, 123, 58, 100, 134, 216, 91, 5, 231, 185, 140, 210, 48, 110, 237, 179, 81, 15, 78, 16, 242, 172, 47, 113, 147, 205, 17, 79, 173, 243, 112, 46, 204, 146, 211, 141, 111, 49, 178, 236, 14, 80, 175, 241, 19, 77, 206, 144, 114, 44, 109, 51, 209, 143, 12, 82, 176, 238, 50, 108, 142, 208, 83, 13, 239, 177, 240, 174, 76, 18, 145, 207, 45, 115, 202, 148, 118, 40, 171, 245, 23, 73, 8, 86, 180, 234, 105, 55, 213, 139, 87, 9, 235, 181, 54, 104, 138, 212, 149, 203, 41, 119, 244, 170, 72, 22, 233, 183, 85, 11, 136, 214, 52, 106, 43, 117, 151, 201, 74, 20, 246, 168, 116, 42, 200, 150, 21, 75, 169, 247, 182, 232, 10, 84, 215, 137, 107, 53];
            "undefined" != typeof Int32Array && (s = new Int32Array(s));
            var u = (0,
                n.default)("dallas-1-wire", function (t, e) {
                    o.Buffer.isBuffer(t) || (t = (0,
                        a.default)(t));
                    for (var r = ~~e, n = 0; n < t.length; n++) {
                        var i = t[n];
                        r = 255 & s[255 & (r ^ i)]
                    }
                    return r
                });
            r.default = u
        }
            , {
            "./create_buffer": 26,
            "./define_crc": 27,
            buffer: 3
        }],
        25: [function (t, e, r) {
            "use strict";
            Object.defineProperty(r, "__esModule", {
                value: !0
            });
            var o = t("buffer")
                , a = i(t("./create_buffer"))
                , n = i(t("./define_crc"));
            function i(t) {
                return t && t.__esModule ? t : {
                    default: t
                }
            }
            var s = [0, 1996959894, 3993919788, 2567524794, 124634137, 1886057615, 3915621685, 2657392035, 249268274, 2044508324, 3772115230, 2547177864, 162941995, 2125561021, 3887607047, 2428444049, 498536548, 1789927666, 4089016648, 2227061214, 450548861, 1843258603, 4107580753, 2211677639, 325883990, 1684777152, 4251122042, 2321926636, 335633487, 1661365465, 4195302755, 2366115317, 997073096, 1281953886, 3579855332, 2724688242, 1006888145, 1258607687, 3524101629, 2768942443, 901097722, 1119000684, 3686517206, 2898065728, 853044451, 1172266101, 3705015759, 2882616665, 651767980, 1373503546, 3369554304, 3218104598, 565507253, 1454621731, 3485111705, 3099436303, 671266974, 1594198024, 3322730930, 2970347812, 795835527, 1483230225, 3244367275, 3060149565, 1994146192, 31158534, 2563907772, 4023717930, 1907459465, 112637215, 2680153253, 3904427059, 2013776290, 251722036, 2517215374, 3775830040, 2137656763, 141376813, 2439277719, 3865271297, 1802195444, 476864866, 2238001368, 4066508878, 1812370925, 453092731, 2181625025, 4111451223, 1706088902, 314042704, 2344532202, 4240017532, 1658658271, 366619977, 2362670323, 4224994405, 1303535960, 984961486, 2747007092, 3569037538, 1256170817, 1037604311, 2765210733, 3554079995, 1131014506, 879679996, 2909243462, 3663771856, 1141124467, 855842277, 2852801631, 3708648649, 1342533948, 654459306, 3188396048, 3373015174, 1466479909, 544179635, 3110523913, 3462522015, 1591671054, 702138776, 2966460450, 3352799412, 1504918807, 783551873, 3082640443, 3233442989, 3988292384, 2596254646, 62317068, 1957810842, 3939845945, 2647816111, 81470997, 1943803523, 3814918930, 2489596804, 225274430, 2053790376, 3826175755, 2466906013, 167816743, 2097651377, 4027552580, 2265490386, 503444072, 1762050814, 4150417245, 2154129355, 426522225, 1852507879, 4275313526, 2312317920, 282753626, 1742555852, 4189708143, 2394877945, 397917763, 1622183637, 3604390888, 2714866558, 953729732, 1340076626, 3518719985, 2797360999, 1068828381, 1219638859, 3624741850, 2936675148, 906185462, 1090812512, 3747672003, 2825379669, 829329135, 1181335161, 3412177804, 3160834842, 628085408, 1382605366, 3423369109, 3138078467, 570562233, 1426400815, 3317316542, 2998733608, 733239954, 1555261956, 3268935591, 3050360625, 752459403, 1541320221, 2607071920, 3965973030, 1969922972, 40735498, 2617837225, 3943577151, 1913087877, 83908371, 2512341634, 3803740692, 2075208622, 213261112, 2463272603, 3855990285, 2094854071, 198958881, 2262029012, 4057260610, 1759359992, 534414190, 2176718541, 4139329115, 1873836001, 414664567, 2282248934, 4279200368, 1711684554, 285281116, 2405801727, 4167216745, 1634467795, 376229701, 2685067896, 3608007406, 1308918612, 956543938, 2808555105, 3495958263, 1231636301, 1047427035, 2932959818, 3654703836, 1088359270, 936918e3, 2847714899, 3736837829, 1202900863, 817233897, 3183342108, 3401237130, 1404277552, 615818150, 3134207493, 3453421203, 1423857449, 601450431, 3009837614, 3294710456, 1567103746, 711928724, 3020668471, 3272380065, 1510334235, 755167117];
            "undefined" != typeof Int32Array && (s = new Int32Array(s));
            var u = (0,
                n.default)("jam", function (t) {
                    var e = 1 < arguments.length && void 0 !== arguments[1] ? arguments[1] : -1;
                    o.Buffer.isBuffer(t) || (t = (0,
                        a.default)(t));
                    for (var r = 0 === e ? 0 : ~~e, n = 0; n < t.length; n++) {
                        var i = t[n];
                        r = s[255 & (r ^ i)] ^ r >>> 8
                    }
                    return r
                });
            r.default = u
        }
            , {
            "./create_buffer": 26,
            "./define_crc": 27,
            buffer: 3
        }],
        26: [function (t, e, r) {
            "use strict";
            Object.defineProperty(r, "__esModule", {
                value: !0
            });
            var n = t("buffer")
                , i = n.Buffer.from && n.Buffer.alloc && n.Buffer.allocUnsafe && n.Buffer.allocUnsafeSlow ? n.Buffer.from : function (t) {
                    return new n.Buffer(t)
                }
                ;
            r.default = i
        }
            , {
            buffer: 3
        }],
        27: [function (t, e, r) {
            "use strict";
            Object.defineProperty(r, "__esModule", {
                value: !0
            }),
                r.default = function (t, r) {
                    function e(t, e) {
                        return r(t, e) >>> 0
                    }
                    return e.signed = r,
                        (e.unsigned = e).model = t,
                        e
                }
        }
            , {}],
        28: [function (t, e, r) {
            "use strict";
            e.exports = {
                crc1: t("./crc1"),
                crc8: t("./crc8"),
                crc81wire: t("./crc8_1wire"),
                crc16: t("./crc16"),
                crc16ccitt: t("./crc16_ccitt"),
                crc16modbus: t("./crc16_modbus"),
                crc16xmodem: t("./crc16_xmodem"),
                crc16kermit: t("./crc16_kermit"),
                crc24: t("./crc24"),
                crc32: t("./crc32"),
                crcjam: t("./crcjam")
            }
        }
            , {
            "./crc1": 4,
            "./crc16": 5,
            "./crc16_ccitt": 6,
            "./crc16_kermit": 7,
            "./crc16_modbus": 8,
            "./crc16_xmodem": 9,
            "./crc24": 10,
            "./crc32": 11,
            "./crc8": 12,
            "./crc8_1wire": 13,
            "./crcjam": 14
        }],
        29: [function (t, e, r) {
            r.read = function (t, e, r, n, i) {
                var o, a, s = 8 * i - n - 1, u = (1 << s) - 1, f = u >> 1, c = -7, h = r ? i - 1 : 0, l = r ? -1 : 1, d = t[e + h];
                for (h += l,
                    o = d & (1 << -c) - 1,
                    d >>= -c,
                    c += s; 0 < c; o = 256 * o + t[e + h],
                    h += l,
                    c -= 8)
                    ;
                for (a = o & (1 << -c) - 1,
                    o >>= -c,
                    c += n; 0 < c; a = 256 * a + t[e + h],
                    h += l,
                    c -= 8)
                    ;
                if (0 === o)
                    o = 1 - f;
                else {
                    if (o === u)
                        return a ? NaN : 1 / 0 * (d ? -1 : 1);
                    a += Math.pow(2, n),
                        o -= f
                }
                return (d ? -1 : 1) * a * Math.pow(2, o - n)
            }
                ,
                r.write = function (t, e, r, n, i, o) {
                    var a, s, u, f = 8 * o - i - 1, c = (1 << f) - 1, h = c >> 1, l = 23 === i ? Math.pow(2, -24) - Math.pow(2, -77) : 0, d = n ? 0 : o - 1, p = n ? 1 : -1, y = e < 0 || 0 === e && 1 / e < 0 ? 1 : 0;
                    for (e = Math.abs(e),
                        isNaN(e) || e === 1 / 0 ? (s = isNaN(e) ? 1 : 0,
                            a = c) : (a = Math.floor(Math.log(e) / Math.LN2),
                                e * (u = Math.pow(2, -a)) < 1 && (a--,
                                    u *= 2),
                                2 <= (e += 1 <= a + h ? l / u : l * Math.pow(2, 1 - h)) * u && (a++,
                                    u /= 2),
                                c <= a + h ? (s = 0,
                                    a = c) : 1 <= a + h ? (s = (e * u - 1) * Math.pow(2, i),
                                        a += h) : (s = e * Math.pow(2, h - 1) * Math.pow(2, i),
                                            a = 0)); 8 <= i; t[r + d] = 255 & s,
                                            d += p,
                                            s /= 256,
                        i -= 8)
                        ;
                    for (a = a << i | s,
                        f += i; 0 < f; t[r + d] = 255 & a,
                        d += p,
                        a /= 256,
                        f -= 8)
                        ;
                    t[r + d - p] |= 128 * y
                }
        }
            , {}],
        30: [function (t, e, r) {
            "use strict";
            function n(a, t, e) {
                var i, s, u, f, c, h, l, d, p, y = 0, v = [], g = 0, b = !1, o = [], w = [], m = !1;
                if (i = (e = e || {}).encoding || "UTF8",
                    (p = e.numRounds || 1) !== parseInt(p, 10) || p < 1)
                    throw Error("numRounds must a integer >= 1");
                if (0 !== a.lastIndexOf("SHA-", 0))
                    throw Error("Chosen SHA variant is not supported");
                if (h = function (t, e) {
                    return j(t, e, a)
                }
                    ,
                    l = function (t, e, r, n) {
                        var i, o;
                        if ("SHA-224" !== a && "SHA-256" !== a)
                            throw Error("Unexpected error in SHA-2 implementation");
                        for (i = 15 + (e + 65 >>> 9 << 4),
                            o = 16; t.length <= i;)
                            t.push(0);
                        for (t[e >>> 5] |= 128 << 24 - e % 32,
                            e += r,
                            t[i] = 4294967295 & e,
                            t[i - 1] = e / 4294967296 | 0,
                            r = t.length,
                            e = 0; e < r; e += o)
                            n = j(t.slice(e, e + o), n, a);
                        if ("SHA-224" === a)
                            t = [n[0], n[1], n[2], n[3], n[4], n[5], n[6]];
                        else {
                            if ("SHA-256" !== a)
                                throw Error("Unexpected error in SHA-2 implementation");
                            t = n
                        }
                        return t
                    }
                    ,
                    d = function (t) {
                        return t.slice()
                    }
                    ,
                    "SHA-224" === a)
                    c = 512,
                        f = 224;
                else {
                    if ("SHA-256" !== a)
                        throw Error("Chosen SHA variant is not supported");
                    c = 512,
                        f = 256
                }
                u = k(t, i),
                    s = H(a),
                    this.setHMACKey = function (t, e, r) {
                        var n;
                        if (!0 === b)
                            throw Error("HMAC key already set");
                        if (!0 === m)
                            throw Error("Cannot set HMAC key after calling update");
                        if (t = (e = k(e, i = (r || {}).encoding || "UTF8")(t)).binLen,
                            e = e.value,
                            r = (n = c >>> 3) / 4 - 1,
                            n < t / 8) {
                            for (e = l(e, t, 0, H(a)); e.length <= r;)
                                e.push(0);
                            e[r] &= 4294967040
                        } else if (t / 8 < n) {
                            for (; e.length <= r;)
                                e.push(0);
                            e[r] &= 4294967040
                        }
                        for (t = 0; t <= r; t += 1)
                            o[t] = 909522486 ^ e[t],
                                w[t] = 1549556828 ^ e[t];
                        s = h(o, s),
                            y = c,
                            b = !0
                    }
                    ,
                    this.update = function (t) {
                        var e, r, n, i = 0, o = c >>> 5;
                        for (t = (e = u(t, v, g)).binLen,
                            r = e.value,
                            e = t >>> 5,
                            n = 0; n < e; n += o)
                            i + c <= t && (s = h(r.slice(n, n + o), s),
                                i += c);
                        y += i,
                            v = r.slice(i >>> 5),
                            g = t % c,
                            m = !0
                    }
                    ,
                    this.getHash = function (t, e) {
                        var r, n, i, o;
                        if (!0 === b)
                            throw Error("Cannot call getHash after setting HMAC key");
                        switch (i = x(e),
                        t) {
                            case "HEX":
                                r = function (t) {
                                    return _(t, f, i)
                                }
                                    ;
                                break;
                            case "B64":
                                r = function (t) {
                                    return A(t, f, i)
                                }
                                    ;
                                break;
                            case "BYTES":
                                r = function (t) {
                                    return E(t, f)
                                }
                                    ;
                                break;
                            case "ARRAYBUFFER":
                                try {
                                    n = new ArrayBuffer(0)
                                } catch (t) {
                                    throw Error("ARRAYBUFFER not supported by this environment")
                                }
                                r = function (t) {
                                    return B(t, f)
                                }
                                    ;
                                break;
                            default:
                                throw Error("format must be HEX, B64, BYTES, or ARRAYBUFFER")
                        }
                        for (o = l(v.slice(), g, y, d(s)),
                            n = 1; n < p; n += 1)
                            o = l(o, f, 0, H(a));
                        return r(o)
                    }
                    ,
                    this.getHMAC = function (t, e) {
                        var r, n, i, o;
                        if (!1 === b)
                            throw Error("Cannot call getHMAC without first setting HMAC key");
                        switch (i = x(e),
                        t) {
                            case "HEX":
                                r = function (t) {
                                    return _(t, f, i)
                                }
                                    ;
                                break;
                            case "B64":
                                r = function (t) {
                                    return A(t, f, i)
                                }
                                    ;
                                break;
                            case "BYTES":
                                r = function (t) {
                                    return E(t, f)
                                }
                                    ;
                                break;
                            case "ARRAYBUFFER":
                                try {
                                    r = new ArrayBuffer(0)
                                } catch (t) {
                                    throw Error("ARRAYBUFFER not supported by this environment")
                                }
                                r = function (t) {
                                    return B(t, f)
                                }
                                    ;
                                break;
                            default:
                                throw Error("outputFormat must be HEX, B64, BYTES, or ARRAYBUFFER")
                        }
                        return n = l(v.slice(), g, y, d(s)),
                            o = h(w, H(a)),
                            r(o = l(n, f, c, o))
                    }
            }
            function i() { }
            function _(t, e, r) {
                var n, i, o = "";
                for (e /= 8,
                    n = 0; n < e; n += 1)
                    i = t[n >>> 2] >>> 8 * (3 + n % 4 * -1),
                        o += "0123456789abcdef".charAt(i >>> 4 & 15) + "0123456789abcdef".charAt(15 & i);
                return r.outputUpper ? o.toUpperCase() : o
            }
            function A(t, e, r) {
                var n, i, o, a = "", s = e / 8;
                for (n = 0; n < s; n += 3)
                    for (i = n + 1 < s ? t[n + 1 >>> 2] : 0,
                        o = n + 2 < s ? t[n + 2 >>> 2] : 0,
                        o = (t[n >>> 2] >>> 8 * (3 + n % 4 * -1) & 255) << 16 | (i >>> 8 * (3 + (n + 1) % 4 * -1) & 255) << 8 | o >>> 8 * (3 + (n + 2) % 4 * -1) & 255,
                        i = 0; i < 4; i += 1)
                        a += 8 * n + 6 * i <= e ? "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(o >>> 6 * (3 - i) & 63) : r.b64Pad;
                return a
            }
            function E(t, e) {
                var r, n, i = "", o = e / 8;
                for (r = 0; r < o; r += 1)
                    n = t[r >>> 2] >>> 8 * (3 + r % 4 * -1) & 255,
                        i += String.fromCharCode(n);
                return i
            }
            function B(t, e) {
                var r, n, i = e / 8, o = new ArrayBuffer(i);
                for (n = new Uint8Array(o),
                    r = 0; r < i; r += 1)
                    n[r] = t[r >>> 2] >>> 8 * (3 + r % 4 * -1) & 255;
                return o
            }
            function x(t) {
                var e = {
                    outputUpper: !1,
                    b64Pad: "=",
                    shakeLen: -1
                };
                if (t = t || {},
                    e.outputUpper = t.outputUpper || !1,
                    !0 === t.hasOwnProperty("b64Pad") && (e.b64Pad = t.b64Pad),
                    "boolean" != typeof e.outputUpper)
                    throw Error("Invalid outputUpper formatting option");
                if ("string" != typeof e.b64Pad)
                    throw Error("Invalid b64Pad formatting option");
                return e
            }
            function k(t, l) {
                var e;
                switch (l) {
                    case "UTF8":
                    case "UTF16BE":
                    case "UTF16LE":
                        break;
                    default:
                        throw Error("encoding must be UTF8, UTF16BE, or UTF16LE")
                }
                switch (t) {
                    case "HEX":
                        e = function (t, e, r) {
                            var n, i, o, a, s, u = t.length;
                            if (0 != u % 2)
                                throw Error("String of HEX type must be in byte increments");
                            for (e = e || [0],
                                s = (r = r || 0) >>> 3,
                                n = 0; n < u; n += 2) {
                                if (i = parseInt(t.substr(n, 2), 16),
                                    isNaN(i))
                                    throw Error("String of HEX type contains invalid characters");
                                for (o = (a = (n >>> 1) + s) >>> 2; e.length <= o;)
                                    e.push(0);
                                e[o] |= i << 8 * (3 + a % 4 * -1)
                            }
                            return {
                                value: e,
                                binLen: 4 * u + r
                            }
                        }
                            ;
                        break;
                    case "TEXT":
                        e = function (t, e, r) {
                            var n, i, o, a, s, u, f, c, h = 0;
                            if (e = e || [0],
                                s = (r = r || 0) >>> 3,
                                "UTF8" === l)
                                for (c = 3,
                                    o = 0; o < t.length; o += 1)
                                    for (i = [],
                                        (n = t.charCodeAt(o)) < 128 ? i.push(n) : n < 2048 ? (i.push(192 | n >>> 6),
                                            i.push(128 | 63 & n)) : n < 55296 || 57344 <= n ? i.push(224 | n >>> 12, 128 | n >>> 6 & 63, 128 | 63 & n) : (o += 1,
                                                n = 65536 + ((1023 & n) << 10 | 1023 & t.charCodeAt(o)),
                                                i.push(240 | n >>> 18, 128 | n >>> 12 & 63, 128 | n >>> 6 & 63, 128 | 63 & n)),
                                        a = 0; a < i.length; a += 1) {
                                        for (u = (f = h + s) >>> 2; e.length <= u;)
                                            e.push(0);
                                        e[u] |= i[a] << 8 * (c + f % 4 * -1),
                                            h += 1
                                    }
                            else if ("UTF16BE" === l || "UTF16LE" === l)
                                for (c = 2,
                                    i = "UTF16LE" === l || "UTF16LE" !== l && !1,
                                    o = 0; o < t.length; o += 1) {
                                    for (n = t.charCodeAt(o),
                                        !0 === i && (n = (a = 255 & n) << 8 | n >>> 8),
                                        u = (f = h + s) >>> 2; e.length <= u;)
                                        e.push(0);
                                    e[u] |= n << 8 * (c + f % 4 * -1),
                                        h += 2
                                }
                            return {
                                value: e,
                                binLen: 8 * h + r
                            }
                        }
                            ;
                        break;
                    case "B64":
                        e = function (t, e, r) {
                            var n, i, o, a, s, u, f, c = 0;
                            if (-1 === t.search(/^[a-zA-Z0-9=+\/]+$/))
                                throw Error("Invalid character in base-64 string");
                            if (i = t.indexOf("="),
                                t = t.replace(/\=/g, ""),
                                -1 !== i && i < t.length)
                                throw Error("Invalid '=' found in base-64 string");
                            for (e = e || [0],
                                u = (r = r || 0) >>> 3,
                                i = 0; i < t.length; i += 4) {
                                for (s = t.substr(i, 4),
                                    o = a = 0; o < s.length; o += 1)
                                    a |= (n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".indexOf(s[o])) << 18 - 6 * o;
                                for (o = 0; o < s.length - 1; o += 1) {
                                    for (n = (f = c + u) >>> 2; e.length <= n;)
                                        e.push(0);
                                    e[n] |= (a >>> 16 - 8 * o & 255) << 8 * (3 + f % 4 * -1),
                                        c += 1
                                }
                            }
                            return {
                                value: e,
                                binLen: 8 * c + r
                            }
                        }
                            ;
                        break;
                    case "BYTES":
                        e = function (t, e, r) {
                            var n, i, o, a, s;
                            for (e = e || [0],
                                o = (r = r || 0) >>> 3,
                                i = 0; i < t.length; i += 1)
                                n = t.charCodeAt(i),
                                    a = (s = i + o) >>> 2,
                                    e.length <= a && e.push(0),
                                    e[a] |= n << 8 * (3 + s % 4 * -1);
                            return {
                                value: e,
                                binLen: 8 * t.length + r
                            }
                        }
                            ;
                        break;
                    case "ARRAYBUFFER":
                        try {
                            e = new ArrayBuffer(0)
                        } catch (t) {
                            throw Error("ARRAYBUFFER not supported by this environment")
                        }
                        e = function (t, e, r) {
                            var n, i, o, a, s;
                            for (e = e || [0],
                                i = (r = r || 0) >>> 3,
                                s = new Uint8Array(t),
                                n = 0; n < t.byteLength; n += 1)
                                o = (a = n + i) >>> 2,
                                    e.length <= o && e.push(0),
                                    e[o] |= s[n] << 8 * (3 + a % 4 * -1);
                            return {
                                value: e,
                                binLen: 8 * t.byteLength + r
                            }
                        }
                            ;
                        break;
                    default:
                        throw Error("format must be HEX, TEXT, B64, BYTES, or ARRAYBUFFER")
                }
                return e
            }
            function o(t, e) {
                return t >>> e | t << 32 - e
            }
            function U(t, e, r) {
                return t & e ^ ~t & r
            }
            function T(t, e, r) {
                return t & e ^ t & r ^ e & r
            }
            function S(t) {
                return o(t, 2) ^ o(t, 13) ^ o(t, 22)
            }
            function C(t) {
                return o(t, 6) ^ o(t, 11) ^ o(t, 25)
            }
            function I(t) {
                return o(t, 7) ^ o(t, 18) ^ t >>> 3
            }
            function O(t) {
                return o(t, 17) ^ o(t, 19) ^ t >>> 10
            }
            function M(t, e) {
                var r = (65535 & t) + (65535 & e);
                return ((t >>> 16) + (e >>> 16) + (r >>> 16) & 65535) << 16 | 65535 & r
            }
            function R(t, e, r, n) {
                var i = (65535 & t) + (65535 & e) + (65535 & r) + (65535 & n);
                return ((t >>> 16) + (e >>> 16) + (r >>> 16) + (n >>> 16) + (i >>> 16) & 65535) << 16 | 65535 & i
            }
            function L(t, e, r, n, i) {
                var o = (65535 & t) + (65535 & e) + (65535 & r) + (65535 & n) + (65535 & i);
                return ((t >>> 16) + (e >>> 16) + (r >>> 16) + (n >>> 16) + (i >>> 16) + (o >>> 16) & 65535) << 16 | 65535 & o
            }
            function H(t) {
                var e, r = [];
                if (0 !== t.lastIndexOf("SHA-", 0))
                    throw Error("No SHA variants supported");
                switch (r = [3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428],
                e = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225],
                t) {
                    case "SHA-224":
                        break;
                    case "SHA-256":
                        r = e;
                        break;
                    case "SHA-384":
                    case "SHA-512":
                        r = [new i, new i, new i, new i, new i, new i, new i, new i];
                        break;
                    default:
                        throw Error("Unknown SHA variant")
                }
                return r
            }
            function j(t, e, r) {
                var n, i, o, a, s, u, f, c, h, l, d, p, y, v, g, b, w, m, _, A, E, B, x, k = [];
                if ("SHA-224" !== r && "SHA-256" !== r)
                    throw Error("Unexpected error in SHA-2 implementation");
                for (l = 64,
                    p = 1,
                    B = Number,
                    y = M,
                    v = R,
                    g = L,
                    b = I,
                    w = O,
                    m = S,
                    _ = C,
                    E = T,
                    A = U,
                    x = F,
                    r = e[0],
                    n = e[1],
                    i = e[2],
                    o = e[3],
                    a = e[4],
                    s = e[5],
                    u = e[6],
                    f = e[7],
                    d = 0; d < l; d += 1)
                    d < 16 ? (h = d * p,
                        c = t.length <= h ? 0 : t[h],
                        h = t.length <= h + 1 ? 0 : t[h + 1],
                        k[d] = new B(c, h)) : k[d] = v(w(k[d - 2]), k[d - 7], b(k[d - 15]), k[d - 16]),
                        c = g(f, _(a), A(a, s, u), x[d], k[d]),
                        h = y(m(r), E(r, n, i)),
                        f = u,
                        u = s,
                        s = a,
                        a = y(o, c),
                        o = i,
                        i = n,
                        n = r,
                        r = y(c, h);
                return e[0] = y(r, e[0]),
                    e[1] = y(n, e[1]),
                    e[2] = y(i, e[2]),
                    e[3] = y(o, e[3]),
                    e[4] = y(a, e[4]),
                    e[5] = y(s, e[5]),
                    e[6] = y(u, e[6]),
                    e[7] = y(f, e[7]),
                    e
            }
            var a, F;
            a = this,
                F = [1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298],
                void 0 !== r ? (void 0 !== e && e.exports && (e.exports = n),
                    r = n) : a.jsSHA = n
        }
            , {}],
        31: [function (t, e, r) {
            var n, i, o = e.exports = {};
            function a() {
                throw new Error("setTimeout has not been defined")
            }
            function s() {
                throw new Error("clearTimeout has not been defined")
            }
            function u(e) {
                if (n === setTimeout)
                    return setTimeout(e, 0);
                if ((n === a || !n) && setTimeout)
                    return n = setTimeout,
                        setTimeout(e, 0);
                try {
                    return n(e, 0)
                } catch (t) {
                    try {
                        return n.call(null, e, 0)
                    } catch (t) {
                        return n.call(this, e, 0)
                    }
                }
            }
            !function () {
                try {
                    n = "function" == typeof setTimeout ? setTimeout : a
                } catch (t) {
                    n = a
                }
                try {
                    i = "function" == typeof clearTimeout ? clearTimeout : s
                } catch (t) {
                    i = s
                }
            }();
            var f, c = [], h = !1, l = -1;
            function d() {
                h && f && (h = !1,
                    f.length ? c = f.concat(c) : l = -1,
                    c.length && p())
            }
            function p() {
                if (!h) {
                    var t = u(d);
                    h = !0;
                    for (var e = c.length; e;) {
                        for (f = c,
                            c = []; ++l < e;)
                            f && f[l].run();
                        l = -1,
                            e = c.length
                    }
                    f = null,
                        h = !1,
                        function (e) {
                            if (i === clearTimeout)
                                return clearTimeout(e);
                            if ((i === s || !i) && clearTimeout)
                                return i = clearTimeout,
                                    clearTimeout(e);
                            try {
                                i(e)
                            } catch (t) {
                                try {
                                    return i.call(null, e)
                                } catch (t) {
                                    return i.call(this, e)
                                }
                            }
                        }(t)
                }
            }
            function y(t, e) {
                this.fun = t,
                    this.array = e
            }
            function v() { }
            o.nextTick = function (t) {
                var e = new Array(arguments.length - 1);
                if (1 < arguments.length)
                    for (var r = 1; r < arguments.length; r++)
                        e[r - 1] = arguments[r];
                c.push(new y(t, e)),
                    1 !== c.length || h || u(p)
            }
                ,
                y.prototype.run = function () {
                    this.fun.apply(null, this.array)
                }
                ,
                o.title = "browser",
                o.browser = !0,
                o.env = {},
                o.argv = [],
                o.version = "",
                o.versions = {},
                o.on = v,
                o.addListener = v,
                o.once = v,
                o.off = v,
                o.removeListener = v,
                o.removeAllListeners = v,
                o.emit = v,
                o.prependListener = v,
                o.prependOnceListener = v,
                o.listeners = function (t) {
                    return []
                }
                ,
                o.binding = function (t) {
                    throw new Error("process.binding is not supported")
                }
                ,
                o.cwd = function () {
                    return "/"
                }
                ,
                o.chdir = function (t) {
                    throw new Error("process.chdir is not supported")
                }
                ,
                o.umask = function () {
                    return 0
                }
        }
            , {}],
        32: [function (t, e, r) {
            var n = t("buffer")
                , i = n.Buffer;
            function o(t, e) {
                for (var r in t)
                    e[r] = t[r]
            }
            function a(t, e, r) {
                return i(t, e, r)
            }
            i.from && i.alloc && i.allocUnsafe && i.allocUnsafeSlow ? e.exports = n : (o(n, r),
                r.Buffer = a),
                a.prototype = Object.create(i.prototype),
                o(i, a),
                a.from = function (t, e, r) {
                    if ("number" == typeof t)
                        throw new TypeError("Argument must not be a number");
                    return i(t, e, r)
                }
                ,
                a.alloc = function (t, e, r) {
                    if ("number" != typeof t)
                        throw new TypeError("Argument must be a number");
                    var n = i(t);
                    return void 0 !== e ? "string" == typeof r ? n.fill(e, r) : n.fill(e) : n.fill(0),
                        n
                }
                ,
                a.allocUnsafe = function (t) {
                    if ("number" != typeof t)
                        throw new TypeError("Argument must be a number");
                    return i(t)
                }
                ,
                a.allocUnsafeSlow = function (t) {
                    if ("number" != typeof t)
                        throw new TypeError("Argument must be a number");
                    return n.SlowBuffer(t)
                }
        }
            , {
            buffer: 3
        }],
        33: [function (t, e, r) {
            var a = t("./crypto/base58")
                , n = t("./crypto/segwit_addr")
                , s = t("./crypto/utils");
            function i(t, e) {
                var r = (e = e || {}).expectedLength || 25
                    , n = e.hashFunction || "sha256"
                    , i = function (t) {
                        try {
                            return a.decode(t)
                        } catch (t) {
                            return null
                        }
                    }(t);
                if (i) {
                    var o = i.length;
                    return o !== r ? null : s.toHex(i.slice(o - 4, o)) === function (t, e) {
                        switch (t) {
                            case "blake256":
                                return s.blake256Checksum(e);
                            case "sha256":
                            default:
                                return s.sha256Checksum(e)
                        }
                    }(n, s.toHex(i.slice(0, o - 4))) ? s.toHex(i.slice(0, r - 24)) : null
                }
                return null
            }
            e.exports = {
                isValidAddress: function (t, e, r) {
                    return function (t, e, r) {
                        r = r || "prod";
                        var n = i(t, e);
                        return !!n && 0 <= ("prod" === r || "testnet" === r ? e.addressTypes[r] : e.addressTypes.prod.concat(e.addressTypes.testnet)).indexOf(n)
                    }(t, e, r) || n.isValidAddress(t, e.segwitHrp)
                }
            }
        }
            , {
            "./crypto/base58": 35,
            "./crypto/segwit_addr": 42,
            "./crypto/utils": 44
        }],
        34: [function (t, e, r) {
            var i = t("crc")
                , o = t("./crypto/cbor")
                , a = t("./crypto/base58");
            e.exports = {
                isValidAddress: function (t) {
                    var e = function (t) {
                        try {
                            var e = a.decode(t);
                            return o.decode(new Uint8Array(e).buffer)
                        } catch (t) {
                            return null
                        }
                    }(t);
                    if (!e || !Array.isArray(e) && 2 != e.length)
                        return !1;
                    var r = e[0]
                        , n = e[1];
                    return "number" == typeof n && i.crc32(r) == n
                }
            }
        }
            , {
            "./crypto/base58": 35,
            "./crypto/cbor": 40,
            crc: 28
        }],
        35: [function (t, e, r) {
            for (var n = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz", a = {}, i = 0; i < n.length; ++i)
                a[n.charAt(i)] = i;
            var s = n.length;
            e.exports = {
                decode: function (t) {
                    if (0 === t.length)
                        return [];
                    var e, r, n = [0];
                    for (e = 0; e < t.length; ++e) {
                        var i = t[e];
                        if (!(i in a))
                            throw new Error("Non-base58 character");
                        for (r = 0; r < n.length; ++r)
                            n[r] *= s;
                        n[0] += a[i];
                        var o = 0;
                        for (r = 0; r < n.length; ++r)
                            n[r] += o,
                                o = n[r] >> 8,
                                n[r] &= 255;
                        for (; o;)
                            n.push(255 & o),
                                o >>= 8
                    }
                    for (e = 0; "1" === t[e] && e < t.length - 1; ++e)
                        n.push(0);
                    return n.reverse()
                }
            }
        }
            , {}],
        36: [function (t, e, r) {
            var u = "qpzry9x8gf2tvdw0s3jn54khce6mua7l"
                , o = [996825010, 642813549, 513874426, 1027748829, 705979059];
            function f(t) {
                for (var e = 1, r = 0; r < t.length; ++r) {
                    var n = e >> 25;
                    e = (33554431 & e) << 5 ^ t[r];
                    for (var i = 0; i < 5; ++i)
                        n >> i & 1 && (e ^= o[i])
                }
                return e
            }
            function c(t) {
                var e, r = [];
                for (e = 0; e < t.length; ++e)
                    r.push(t.charCodeAt(e) >> 5);
                for (r.push(0),
                    e = 0; e < t.length; ++e)
                    r.push(31 & t.charCodeAt(e));
                return r
            }
            e.exports = {
                decode: function (t) {
                    var e, r = !1, n = !1;
                    for (e = 0; e < t.length; ++e) {
                        if (t.charCodeAt(e) < 33 || 126 < t.charCodeAt(e))
                            return null;
                        97 <= t.charCodeAt(e) && t.charCodeAt(e) <= 122 && (r = !0),
                            65 <= t.charCodeAt(e) && t.charCodeAt(e) <= 90 && (n = !0)
                    }
                    if (r && n)
                        return null;
                    var i = (t = t.toLowerCase()).lastIndexOf("1");
                    if (i < 1 || i + 7 > t.length || 90 < t.length)
                        return null;
                    var o = t.substring(0, i)
                        , a = [];
                    for (e = i + 1; e < t.length; ++e) {
                        var s = u.indexOf(t.charAt(e));
                        if (-1 === s)
                            return null;
                        a.push(s)
                    }
                    return function (t, e) {
                        return 1 === f(c(t).concat(e))
                    }(o, a) ? {
                        hrp: o,
                        data: a.slice(0, a.length - 6)
                    } : null
                },
                encode: function (t, e) {
                    for (var r = e.concat(function (t, e) {
                        for (var r = 1 ^ f(c(t).concat(e).concat([0, 0, 0, 0, 0, 0])), n = [], i = 0; i < 6; ++i)
                            n.push(r >> 5 * (5 - i) & 31);
                        return n
                    }(t, e)), n = t + "1", i = 0; i < r.length; ++i)
                        n += u.charAt(r[i]);
                    return n
                }
            }
        }
            , {}],
        37: [function (t, e, r) {
            !function (t) {
                "use strict";
                var p = {};
                function y(t, e, r) {
                    if (r !== p)
                        return t instanceof y ? t : void 0 === t ? g : y.parse(t);
                    for (t = t || []; t.length && !t[t.length - 1];)
                        --t.length;
                    this._d = t,
                        this._s = t.length ? e || 1 : 0
                }
                y._construct = function (t, e) {
                    return new y(t, e, p)
                }
                    ;
                var v = 1e7;
                y.base = v,
                    y.base_log10 = 7;
                var g = new y([], 0, p);
                y.ZERO = g;
                var b = new y([1], 1, p);
                y.ONE = b;
                var w = new y(b._d, -1, p);
                function e(t, e) {
                    for (var r = t._d, n = r.slice(), i = 0; ;) {
                        var o = (r[i] || 0) + 1;
                        if (n[i] = o % v,
                            o <= v - 1)
                            break;
                        ++i
                    }
                    return new y(n, e, p)
                }
                function r(t, e) {
                    for (var r = t._d, n = r.slice(), i = 0; ;) {
                        var o = (r[i] || 0) - 1;
                        if (!(o < 0)) {
                            n[i] = o;
                            break
                        }
                        n[i] = o + v,
                            ++i
                    }
                    return new y(n, e, p)
                }
                y.M_ONE = w,
                    y._0 = g,
                    y._1 = b,
                    y.small = [g, b, new y([2], 1, p), new y([3], 1, p), new y([4], 1, p), new y([5], 1, p), new y([6], 1, p), new y([7], 1, p), new y([8], 1, p), new y([9], 1, p), new y([10], 1, p), new y([11], 1, p), new y([12], 1, p), new y([13], 1, p), new y([14], 1, p), new y([15], 1, p), new y([16], 1, p), new y([17], 1, p), new y([18], 1, p), new y([19], 1, p), new y([20], 1, p), new y([21], 1, p), new y([22], 1, p), new y([23], 1, p), new y([24], 1, p), new y([25], 1, p), new y([26], 1, p), new y([27], 1, p), new y([28], 1, p), new y([29], 1, p), new y([30], 1, p), new y([31], 1, p), new y([32], 1, p), new y([33], 1, p), new y([34], 1, p), new y([35], 1, p), new y([36], 1, p)],
                    y.digits = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ".split(""),
                    y.prototype.toString = function (t) {
                        if ((t = +t || 10) < 2 || 36 < t)
                            throw new Error("illegal radix " + t + ".");
                        if (0 === this._s)
                            return "0";
                        if (10 === t) {
                            var e = this._s < 0 ? "-" : "";
                            e += this._d[this._d.length - 1].toString();
                            for (var r = this._d.length - 2; 0 <= r; r--) {
                                for (var n = this._d[r].toString(); n.length < 7;)
                                    n = "0" + n;
                                e += n
                            }
                            return e
                        }
                        var i = y.digits;
                        t = y.small[t];
                        for (var o, a = this._s, s = this.abs(), u = []; 0 !== s._s;) {
                            var f = s.divRem(t);
                            s = f[0],
                                o = f[1],
                                u.push(i[o.valueOf()])
                        }
                        return (a < 0 ? "-" : "") + u.reverse().join("")
                    }
                    ,
                    y.radixRegex = [/^$/, /^$/, /^[01]*$/, /^[012]*$/, /^[0-3]*$/, /^[0-4]*$/, /^[0-5]*$/, /^[0-6]*$/, /^[0-7]*$/, /^[0-8]*$/, /^[0-9]*$/, /^[0-9aA]*$/, /^[0-9abAB]*$/, /^[0-9abcABC]*$/, /^[0-9a-dA-D]*$/, /^[0-9a-eA-E]*$/, /^[0-9a-fA-F]*$/, /^[0-9a-gA-G]*$/, /^[0-9a-hA-H]*$/, /^[0-9a-iA-I]*$/, /^[0-9a-jA-J]*$/, /^[0-9a-kA-K]*$/, /^[0-9a-lA-L]*$/, /^[0-9a-mA-M]*$/, /^[0-9a-nA-N]*$/, /^[0-9a-oA-O]*$/, /^[0-9a-pA-P]*$/, /^[0-9a-qA-Q]*$/, /^[0-9a-rA-R]*$/, /^[0-9a-sA-S]*$/, /^[0-9a-tA-T]*$/, /^[0-9a-uA-U]*$/, /^[0-9a-vA-V]*$/, /^[0-9a-wA-W]*$/, /^[0-9a-xA-X]*$/, /^[0-9a-yA-Y]*$/, /^[0-9a-zA-Z]*$/],
                    y.parse = function (t, e) {
                        var r;
                        t = t.toString(),
                            void 0 !== e && 10 != +e || (t = t.replace(/\s*[*xX]\s*10\s*(\^|\*\*)\s*/, "e").replace(/^([+\-])?(\d+)\.?(\d*)[eE]([+\-]?\d+)$/, function (t, e, r, n, i) {
                                var o = (i = +i) < 0
                                    , a = r.length + i;
                                t = (o ? r : n).length,
                                    i = (i = Math.abs(i)) >= t ? i - t + o : 0;
                                var s = new Array(i + 1).join("0")
                                    , u = r + n;
                                return (e || "") + (o ? u = s + u : u += s).substr(0, a += o ? s.length : 0) + (a < u.length ? "." + u.substr(a) : "")
                            })),
                            r = void 0 === e ? "0[xcb]" : 16 == e ? "0x" : 8 == e ? "0c" : 2 == e ? "0b" : "";
                        var n = new RegExp("^([+\\-]?)(" + r + ")?([0-9a-z]*)(?:\\.\\d*)?$", "i").exec(t);
                        if (n) {
                            var i = n[1] || "+"
                                , o = n[2] || ""
                                , a = n[3] || "";
                            if (void 0 === e)
                                e = "0x" === o || "0X" === o ? 16 : "0c" === o || "0C" === o ? 8 : "0b" === o || "0B" === o ? 2 : 10;
                            else if (e < 2 || 36 < e)
                                throw new Error("Illegal radix " + e + ".");
                            if (!y.radixRegex[e = +e].test(a))
                                throw new Error("Bad digit for radix " + e);
                            if (0 === (a = a.replace(/^0+/, "").split("")).length)
                                return g;
                            if (i = "-" === i ? -1 : 1,
                                10 == e) {
                                for (var s = []; 7 <= a.length;)
                                    s.push(parseInt(a.splice(a.length - y.base_log10, y.base_log10).join(""), 10));
                                return s.push(parseInt(a.join(""), 10)),
                                    new y(s, i, p)
                            }
                            s = g;
                            e = y.small[e];
                            for (var u = y.small, f = 0; f < a.length; f++)
                                s = s.multiply(e).add(u[parseInt(a[f], 36)]);
                            return new y(s._d, i, p)
                        }
                        throw new Error("Invalid BigInteger format: " + t)
                    }
                    ,
                    y.prototype.add = function (t) {
                        if (0 === this._s)
                            return y(t);
                        if (0 === (t = y(t))._s)
                            return this;
                        if (this._s !== t._s)
                            return t = t.negate(),
                                this.subtract(t);
                        for (var e, r = this._d, n = t._d, i = r.length, o = n.length, a = new Array(Math.max(i, o) + 1), s = Math.min(i, o), u = 0, f = 0; f < s; f++)
                            e = r[f] + n[f] + u,
                                a[f] = e % v,
                                u = e / v | 0;
                        for (i < o && (r = n,
                            i = o),
                            f = s; u && f < i; f++)
                            e = r[f] + u,
                                a[f] = e % v,
                                u = e / v | 0;
                        for (u && (a[f] = u); f < i; f++)
                            a[f] = r[f];
                        return new y(a, this._s, p)
                    }
                    ,
                    y.prototype.negate = function () {
                        return new y(this._d, 0 | -this._s, p)
                    }
                    ,
                    y.prototype.abs = function () {
                        return this._s < 0 ? this.negate() : this
                    }
                    ,
                    y.prototype.subtract = function (t) {
                        if (0 === this._s)
                            return y(t).negate();
                        if (0 === (t = y(t))._s)
                            return this;
                        if (this._s !== t._s)
                            return t = t.negate(),
                                this.add(t);
                        var e = this;
                        this._s < 0 && (e = new y(t._d, 1, p),
                            t = new y(this._d, 1, p));
                        var r = e.compareAbs(t);
                        if (0 === r)
                            return g;
                        if (r < 0) {
                            var n = t;
                            t = e,
                                e = n
                        }
                        var i, o, a = e._d, s = t._d, u = a.length, f = s.length, c = new Array(u), h = 0;
                        for (i = 0; i < f; i++)
                            h = (o = a[i] - h - s[i]) < 0 ? (o += v,
                                1) : 0,
                                c[i] = o;
                        for (i = f; i < u; i++) {
                            if (!((o = a[i] - h) < 0)) {
                                c[i++] = o;
                                break
                            }
                            o += v,
                                c[i] = o
                        }
                        for (; i < u; i++)
                            c[i] = a[i];
                        return new y(c, r, p)
                    }
                    ,
                    y.prototype.next = function () {
                        switch (this._s) {
                            case 0:
                                return b;
                            case -1:
                                return r(this, -1);
                            default:
                                return e(this, 1)
                        }
                    }
                    ,
                    y.prototype.prev = function () {
                        switch (this._s) {
                            case 0:
                                return w;
                            case -1:
                                return e(this, -1);
                            default:
                                return r(this, 1)
                        }
                    }
                    ,
                    y.prototype.compareAbs = function (t) {
                        if (this === t)
                            return 0;
                        if (!(t instanceof y)) {
                            if (!isFinite(t))
                                return isNaN(t) ? t : -1;
                            t = y(t)
                        }
                        if (0 === this._s)
                            return 0 !== t._s ? -1 : 0;
                        if (0 === t._s)
                            return 1;
                        var e = this._d.length
                            , r = t._d.length;
                        if (e < r)
                            return -1;
                        if (r < e)
                            return 1;
                        for (var n = this._d, i = t._d, o = e - 1; 0 <= o; o--)
                            if (n[o] !== i[o])
                                return n[o] < i[o] ? -1 : 1;
                        return 0
                    }
                    ,
                    y.prototype.compare = function (t) {
                        return this === t ? 0 : (t = y(t),
                            0 === this._s ? -t._s : this._s !== t._s ? this._s : this.compareAbs(t) * this._s)
                    }
                    ,
                    y.prototype.isUnit = function () {
                        return this === b || this === w || 1 === this._d.length && 1 === this._d[0]
                    }
                    ,
                    y.prototype.multiply = function (t) {
                        if (0 === this._s)
                            return g;
                        if (0 === (t = y(t))._s)
                            return g;
                        if (this.isUnit())
                            return this._s < 0 ? t.negate() : t;
                        if (t.isUnit())
                            return t._s < 0 ? this.negate() : this;
                        if (this === t)
                            return this.square();
                        var e, r = this._d.length >= t._d.length, n = (r ? this : t)._d, i = (r ? t : this)._d, o = n.length, a = i.length, s = o + a, u = new Array(s);
                        for (e = 0; e < s; e++)
                            u[e] = 0;
                        for (e = 0; e < a; e++) {
                            for (var f, c = 0, h = i[e], l = o + e, d = e; d < l; d++)
                                c = (f = u[d] + h * n[d - e] + c) / v | 0,
                                    u[d] = f % v | 0;
                            c && (c = (f = u[d] + c) / v | 0,
                                u[d] = f % v)
                        }
                        return new y(u, this._s * t._s, p)
                    }
                    ,
                    y.prototype.multiplySingleDigit = function (t) {
                        if (0 === t || 0 === this._s)
                            return g;
                        if (1 === t)
                            return this;
                        var e;
                        if (1 === this._d.length)
                            return e = this._d[0] * t,
                                new y(v <= e ? [e % v | 0, e / v | 0] : [e], 1, p);
                        if (2 === t)
                            return this.add(this);
                        if (this.isUnit())
                            return new y([t], 1, p);
                        for (var r = this._d, n = r.length, i = n + 1, o = new Array(i), a = 0; a < i; a++)
                            o[a] = 0;
                        for (var s = 0, u = 0; u < n; u++)
                            s = (e = t * r[u] + s) / v | 0,
                                o[u] = e % v | 0;
                        return s && (o[u] = s),
                            new y(o, 1, p)
                    }
                    ,
                    y.prototype.square = function () {
                        if (0 === this._s)
                            return g;
                        if (this.isUnit())
                            return b;
                        var t, e, r, n, i = this._d, o = i.length, a = new Array(o + o + 1);
                        for (n = 0; n < o; n++)
                            r = 2 * n,
                                e = (t = i[n] * i[n]) / v | 0,
                                a[r] = t % v,
                                a[r + 1] = e;
                        for (n = 0; n < o; n++) {
                            e = 0,
                                r = 2 * n + 1;
                            for (var s = n + 1; s < o; s++,
                                r++)
                                e = (t = i[s] * i[n] * 2 + a[r] + e) / v | 0,
                                    a[r] = t % v;
                            var u = e + a[r = o + n];
                            e = u / v | 0,
                                a[r] = u % v,
                                a[r + 1] += e
                        }
                        return new y(a, 1, p)
                    }
                    ,
                    y.prototype.divide = y.prototype.quotient = function (t) {
                        return this.divRem(t)[0]
                    }
                    ,
                    y.prototype.remainder = function (t) {
                        return this.divRem(t)[1]
                    }
                    ,
                    y.prototype.divRem = function (t) {
                        if (0 === (t = y(t))._s)
                            throw new Error("Divide by zero");
                        if (0 === this._s)
                            return [g, g];
                        if (1 === t._d.length)
                            return this.divRemSmall(t._s * t._d[0]);
                        switch (this.compareAbs(t)) {
                            case 0:
                                return [this._s === t._s ? b : w, g];
                            case -1:
                                return [g, this]
                        }
                        for (var e, r = this._s * t._s, n = t.abs(), i = this._d, o = i.length, a = (t._d.length,
                            []), s = new y([], 0, p); o;)
                            if (s._d.unshift(i[--o]),
                                (s = new y(s._d, 1, p)).compareAbs(t) < 0)
                                a.push(0);
                            else {
                                if (0 === s._s)
                                    e = 0;
                                else {
                                    var u = s._d.length
                                        , f = n._d.length
                                        , c = s._d[u - 1] * v + s._d[u - 2]
                                        , h = n._d[f - 1] * v + n._d[f - 2];
                                    s._d.length > n._d.length && (c = (c + 1) * v),
                                        e = Math.ceil(c / h)
                                }
                                do {
                                    var l = n.multiplySingleDigit(e);
                                    if (l.compareAbs(s) <= 0)
                                        break;
                                    e--
                                } while (e);
                                if (a.push(e),
                                    e) {
                                    var d = s.subtract(l);
                                    s._d = d._d.slice()
                                }
                            }
                        return [new y(a.reverse(), r, p), new y(s._d, this._s, p)]
                    }
                    ,
                    y.prototype.divRemSmall = function (t) {
                        var e;
                        if (0 === (t = +t))
                            throw new Error("Divide by zero");
                        var r = t < 0 ? -1 : 1
                            , n = this._s * r;
                        if ((t = Math.abs(t)) < 1 || v <= t)
                            throw new Error("Argument out of range");
                        if (0 === this._s)
                            return [g, g];
                        if (1 === t || -1 === t)
                            return [1 == n ? this.abs() : new y(this._d, n, p), g];
                        if (1 === this._d.length) {
                            var i = new y([this._d[0] / t | 0], 1, p);
                            return e = new y([this._d[0] % t | 0], 1, p),
                                n < 0 && (i = i.negate()),
                                this._s < 0 && (e = e.negate()),
                                [i, e]
                        }
                        for (var o, a = this._d.slice(), s = new Array(a.length), u = 0, f = 0, c = 0; a.length;) {
                            if ((u = u * v + a[a.length - 1]) < t)
                                s[c++] = 0,
                                    a.pop(),
                                    f = v * f + u;
                            else
                                f = u - t * (o = 0 === u ? 0 : u / t | 0),
                                    (s[c++] = o) ? (a.pop(),
                                        u = f) : a.pop()
                        }
                        return e = new y([f], 1, p),
                            this._s < 0 && (e = e.negate()),
                            [new y(s.reverse(), n, p), e]
                    }
                    ,
                    y.prototype.isEven = function () {
                        var t = this._d;
                        return 0 === this._s || 0 === t.length || t[0] % 2 == 0
                    }
                    ,
                    y.prototype.isOdd = function () {
                        return !this.isEven()
                    }
                    ,
                    y.prototype.sign = function () {
                        return this._s
                    }
                    ,
                    y.prototype.isPositive = function () {
                        return 0 < this._s
                    }
                    ,
                    y.prototype.isNegative = function () {
                        return this._s < 0
                    }
                    ,
                    y.prototype.isZero = function () {
                        return 0 === this._s
                    }
                    ,
                    y.prototype.exp10 = function (t) {
                        if (0 === (t = +t))
                            return this;
                        if (Math.abs(t) > Number(i))
                            throw new Error("exponent too large in BigInteger.exp10");
                        if (0 === this._s)
                            return g;
                        if (0 < t) {
                            for (var e = new y(this._d.slice(), this._s, p); 7 <= t; t -= 7)
                                e._d.unshift(0);
                            return 0 == t ? e : (e._s = 1,
                                e = e.multiplySingleDigit(Math.pow(10, t)),
                                this._s < 0 ? e.negate() : e)
                        }
                        if (-t >= 7 * this._d.length)
                            return g;
                        e = new y(this._d.slice(), this._s, p);
                        for (t = -t; 7 <= t; t -= 7)
                            e._d.shift();
                        return 0 == t ? e : e.divRemSmall(Math.pow(10, t))[0]
                    }
                    ,
                    y.prototype.pow = function (t) {
                        if (this.isUnit())
                            return 0 < this._s || y(t).isOdd() ? this : this.negate();
                        if (0 === (t = y(t))._s)
                            return b;
                        if (t._s < 0) {
                            if (0 === this._s)
                                throw new Error("Divide by zero");
                            return g
                        }
                        if (0 === this._s)
                            return g;
                        if (t.isUnit())
                            return this;
                        if (0 < t.compareAbs(i))
                            throw new Error("exponent too large in BigInteger.pow");
                        for (var e = this, r = b, n = y.small[2]; t.isPositive();) {
                            if (t.isOdd() && (r = r.multiply(e),
                                t.isUnit()))
                                return r;
                            e = e.square(),
                                t = t.quotient(n)
                        }
                        return r
                    }
                    ,
                    y.prototype.modPow = function (t, e) {
                        for (var r = b, n = this; t.isPositive();)
                            t.isOdd() && (r = r.multiply(n).remainder(e)),
                                (t = t.quotient(y.small[2])).isPositive() && (n = n.square().remainder(e));
                        return r
                    }
                    ,
                    y.prototype.log = function () {
                        switch (this._s) {
                            case 0:
                                return -1 / 0;
                            case -1:
                                return NaN
                        }
                        var t = this._d.length;
                        if (7 * t < 30)
                            return Math.log(this.valueOf());
                        var e = Math.ceil(30 / 7)
                            , r = this._d.slice(t - e);
                        return Math.log(new y(r, 1, p).valueOf()) + (t - e) * Math.log(v)
                    }
                    ,
                    y.prototype.valueOf = function () {
                        return parseInt(this.toString(), 10)
                    }
                    ,
                    y.prototype.toJSValue = function () {
                        return parseInt(this.toString(), 10)
                    }
                    ,
                    y.prototype.lowVal = function () {
                        return this._d[0] || 0
                    }
                    ;
                var i = y(2147483647);
                function o(e) {
                    return function (t) {
                        return e.call(y(t))
                    }
                }
                function a(r) {
                    return function (t, e) {
                        return r.call(y(t), y(e))
                    }
                }
                function s(n) {
                    return function (t, e, r) {
                        return n.call(y(t), y(e), y(r))
                    }
                }
                y.MAX_EXP = i,
                    function () {
                        var t, e, r = "toJSValue,isEven,isOdd,sign,isZero,isNegative,abs,isUnit,square,negate,isPositive,toString,next,prev,log".split(","), n = "compare,remainder,divRem,subtract,add,quotient,divide,multiply,pow,compareAbs".split(","), i = ["modPow"];
                        for (t = 0; t < r.length; t++)
                            y[e = r[t]] = o(y.prototype[e]);
                        for (t = 0; t < n.length; t++)
                            y[e = n[t]] = a(y.prototype[e]);
                        for (t = 0; t < i.length; t++)
                            y[e = i[t]] = s(y.prototype[e]);
                        y.exp10 = function (t, e) {
                            return y(t).exp10(e)
                        }
                    }(),
                    t.JSBigInt = y
            }(void 0 !== r ? r : this)
        }
            , {}],
        38: [function (t, r, e) {
            (function (o) {
                "use strict";
                h.sigma = [[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3], [11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4], [7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8], [9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13], [2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9], [12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11], [13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10], [6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5], [10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0], [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], [14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3], [11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4], [7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8], [9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13], [2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9]],
                    h.u256 = [608135816, 2242054355, 320440878, 57701188, 2752067618, 698298832, 137296536, 3964562569, 1160258022, 953160567, 3193202383, 887688300, 3232508343, 3380367581, 1065670069, 3041331479],
                    h.padding = new o([128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]),
                    h.prototype._length_carry = function (t) {
                        for (var e = 0; e < t.length && !(t[e] < 4294967296); ++e)
                            t[e] -= 4294967296,
                                t[e + 1] += 1
                    }
                    ,
                    h.prototype.update = function (t, e) {
                        t = new o(t, e);
                        for (var r = this._block, n = 0; this._blockOffset + t.length - n >= r.length;) {
                            for (var i = this._blockOffset; i < r.length;)
                                r[i++] = t[n++];
                            this._length[0] += 8 * r.length,
                                this._length_carry(this._length),
                                this._compress(),
                                this._blockOffset = 0
                        }
                        for (; n < t.length;)
                            r[this._blockOffset++] = t[n++];
                        return this
                    }
                    ;
                var t = new o([1])
                    , e = new o([129]);
                function c(t, e) {
                    return (t << 32 - e | t >>> e) >>> 0
                }
                function i(t, e, r, n, i, o, a, s) {
                    var u = h.sigma
                        , f = h.u256;
                    t[n] = t[n] + ((e[u[r][s]] ^ f[u[r][s + 1]]) >>> 0) + t[i] >>> 0,
                        t[a] = c(t[a] ^ t[n], 16),
                        t[o] = t[o] + t[a] >>> 0,
                        t[i] = c(t[i] ^ t[o], 12),
                        t[n] = t[n] + ((e[u[r][s + 1]] ^ f[u[r][s]]) >>> 0) + t[i] >>> 0,
                        t[a] = c(t[a] ^ t[n], 8),
                        t[o] = t[o] + t[a] >>> 0,
                        t[i] = c(t[i] ^ t[o], 7)
                }
                function h() {
                    this._h = [1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225],
                        this._s = [0, 0, 0, 0],
                        this._block = new o(64),
                        this._blockOffset = 0,
                        this._length = [0, 0],
                        this._nullt = !1,
                        this._zo = t,
                        this._oo = e
                }
                h.prototype._compress = function () {
                    var t, e = h.u256, r = new Array(16), n = new Array(16);
                    for (t = 0; t < 16; ++t)
                        n[t] = this._block.readUInt32BE(4 * t);
                    for (t = 0; t < 8; ++t)
                        r[t] = this._h[t] >>> 0;
                    for (t = 8; t < 12; ++t)
                        r[t] = (this._s[t - 8] ^ e[t - 8]) >>> 0;
                    for (t = 12; t < 16; ++t)
                        r[t] = e[t - 8];
                    for (this._nullt || (r[12] = (r[12] ^ this._length[0]) >>> 0,
                        r[13] = (r[13] ^ this._length[0]) >>> 0,
                        r[14] = (r[14] ^ this._length[1]) >>> 0,
                        r[15] = (r[15] ^ this._length[1]) >>> 0),
                        t = 0; t < 14; ++t)
                        i(r, n, t, 0, 4, 8, 12, 0),
                            i(r, n, t, 1, 5, 9, 13, 2),
                            i(r, n, t, 2, 6, 10, 14, 4),
                            i(r, n, t, 3, 7, 11, 15, 6),
                            i(r, n, t, 0, 5, 10, 15, 8),
                            i(r, n, t, 1, 6, 11, 12, 10),
                            i(r, n, t, 2, 7, 8, 13, 12),
                            i(r, n, t, 3, 4, 9, 14, 14);
                    for (t = 0; t < 16; ++t)
                        this._h[t % 8] = (this._h[t % 8] ^ r[t]) >>> 0;
                    for (t = 0; t < 8; ++t)
                        this._h[t] = (this._h[t] ^ this._s[t % 4]) >>> 0
                }
                    ,
                    h.prototype._padding = function () {
                        var t = this._length[0] + 8 * this._blockOffset
                            , e = this._length[1];
                        4294967296 <= t && (t -= 4294967296,
                            e += 1);
                        var r = new o(8);
                        r.writeUInt32BE(e, 0),
                            r.writeUInt32BE(t, 4),
                            55 === this._blockOffset ? (this._length[0] -= 8,
                                this.update(this._oo)) : (this._blockOffset < 55 ? (0 === this._blockOffset && (this._nullt = !0),
                                    this._length[0] -= 8 * (55 - this._blockOffset),
                                    this.update(h.padding.slice(0, 55 - this._blockOffset))) : (this._length[0] -= 8 * (64 - this._blockOffset),
                                        this.update(h.padding.slice(0, 64 - this._blockOffset)),
                                        this._length[0] -= 440,
                                        this.update(h.padding.slice(1, 56)),
                                        this._nullt = !0),
                                    this.update(this._zo),
                                    this._length[0] -= 8),
                            this._length[0] -= 64,
                            this.update(r)
                    }
                    ,
                    h.prototype.digest = function (t) {
                        this._padding();
                        for (var e = new o(32), r = 0; r < 8; ++r)
                            e.writeUInt32BE(this._h[r], 4 * r);
                        return e.toString(t)
                    }
                    ,
                    r.exports = h
            }
            ).call(this, t("buffer").Buffer)
        }
            , {
            buffer: 3
        }],
        39: [function (t, e, r) {
            "use strict";
            function l(t, e, r) {
                var n = t[e] + t[r]
                    , i = t[e + 1] + t[r + 1];
                4294967296 <= n && i++,
                    t[e] = n,
                    t[e + 1] = i
            }
            function d(t, e, r, n) {
                var i = t[e] + r;
                r < 0 && (i += 4294967296);
                var o = t[e + 1] + n;
                4294967296 <= i && o++,
                    t[e] = i,
                    t[e + 1] = o
            }
            function o(t, e) {
                return t[e] ^ t[e + 1] << 8 ^ t[e + 2] << 16 ^ t[e + 3] << 24
            }
            function n(t, e, r, n, i, o) {
                var a = y[i]
                    , s = y[i + 1]
                    , u = y[o]
                    , f = y[o + 1];
                l(p, t, e),
                    d(p, t, a, s);
                var c = p[n] ^ p[t]
                    , h = p[n + 1] ^ p[t + 1];
                p[n] = h,
                    p[n + 1] = c,
                    l(p, r, n),
                    c = p[e] ^ p[r],
                    h = p[e + 1] ^ p[r + 1],
                    p[e] = c >>> 24 ^ h << 8,
                    p[e + 1] = h >>> 24 ^ c << 8,
                    l(p, t, e),
                    d(p, t, u, f),
                    c = p[n] ^ p[t],
                    h = p[n + 1] ^ p[t + 1],
                    p[n] = c >>> 16 ^ h << 16,
                    p[n + 1] = h >>> 16 ^ c << 16,
                    l(p, r, n),
                    c = p[e] ^ p[r],
                    h = p[e + 1] ^ p[r + 1],
                    p[e] = h >>> 31 ^ c << 1,
                    p[e + 1] = c >>> 31 ^ h << 1
            }
            var a = new Uint32Array([4089235720, 1779033703, 2227873595, 3144134277, 4271175723, 1013904242, 1595750129, 2773480762, 2917565137, 1359893119, 725511199, 2600822924, 4215389547, 528734635, 327033209, 1541459225])
                , i = new Uint8Array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1, 9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4, 10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5, 15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7, 14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2, 13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6, 1, 12, 0, 2, 11, 7, 5, 3].map(function (t) {
                    return 2 * t
                }))
                , p = new Uint32Array(32)
                , y = new Uint32Array(32);
            function s(t, e) {
                var r = 0;
                for (r = 0; r < 16; r++)
                    p[r] = t.h[r],
                        p[r + 16] = a[r];
                for (p[24] = p[24] ^ t.t,
                    p[25] = p[25] ^ t.t / 4294967296,
                    e && (p[28] = ~p[28],
                        p[29] = ~p[29]),
                    r = 0; r < 32; r++)
                    y[r] = o(t.b, 4 * r);
                for (r = 0; r < 12; r++)
                    n(0, 8, 16, 24, i[16 * r + 0], i[16 * r + 1]),
                        n(2, 10, 18, 26, i[16 * r + 2], i[16 * r + 3]),
                        n(4, 12, 20, 28, i[16 * r + 4], i[16 * r + 5]),
                        n(6, 14, 22, 30, i[16 * r + 6], i[16 * r + 7]),
                        n(0, 10, 20, 30, i[16 * r + 8], i[16 * r + 9]),
                        n(2, 12, 22, 24, i[16 * r + 10], i[16 * r + 11]),
                        n(4, 14, 16, 26, i[16 * r + 12], i[16 * r + 13]),
                        n(6, 8, 18, 28, i[16 * r + 14], i[16 * r + 15]);
                for (r = 0; r < 16; r++)
                    t.h[r] = t.h[r] ^ p[r] ^ p[r + 16]
            }
            var u = new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]);
            function f(t, e, r, n) {
                u.fill(0),
                    this.b = new Uint8Array(128),
                    this.h = new Uint32Array(16),
                    this.t = 0,
                    this.c = 0,
                    this.outlen = t,
                    u[0] = t,
                    e && (u[1] = e.length),
                    u[2] = 1,
                    u[3] = 1,
                    r && u.set(r, 32),
                    n && u.set(n, 48);
                for (var i = 0; i < 16; i++)
                    this.h[i] = a[i] ^ o(u, 4 * i);
                e && (c(this, e),
                    this.c = 128)
            }
            function c(t, e) {
                for (var r = 0; r < e.length; r++)
                    128 === t.c && (t.t += t.c,
                        s(t, !1),
                        t.c = 0),
                        t.b[t.c++] = e[r]
            }
            function h(t) {
                return t < 16 ? "0" + t.toString(16) : t.toString(16)
            }
            f.prototype.update = function (t) {
                return c(this, t),
                    this
            }
                ,
                f.prototype.final = f.prototype.digest = function (t) {
                    var e = t && "binary" !== t && "hex" !== t ? t : new Uint8Array(this.outlen);
                    return function (t, e) {
                        t.t += t.c;
                        for (; t.c < 128;)
                            t.b[t.c++] = 0;
                        s(t, !0);
                        for (var r = 0; r < t.outlen; r++)
                            e[r] = t.h[r >> 2] >> 8 * (3 & r)
                    }(this, e),
                        "hex" === t ? function (t) {
                            for (var e = "", r = 0; r < t.length; r++)
                                e += h(t[r]);
                            return e
                        }(e) : e
                }
                ,
                e.exports = f
        }
            , {}],
        40: [function (t, r, e) {
            !function (t, x) {
                "use strict";
                var k = 4294967296
                    , y = 9007199254740992;
                var e = {
                    encode: function (t) {
                        var a, s = new ArrayBuffer(256), u = new DataView(s), f = 0;
                        function c(t) {
                            for (var e = s.byteLength, r = f + t; e < r;)
                                e <<= 1;
                            if (e !== s.byteLength) {
                                var n = u;
                                s = new ArrayBuffer(e),
                                    u = new DataView(s);
                                for (var i = f + 3 >> 2, o = 0; o < i; ++o)
                                    u.setUint32(o << 2, n.getUint32(o << 2))
                            }
                            return a = t,
                                u
                        }
                        function h() {
                            f += a
                        }
                        function l(t) {
                            h(c(1).setUint8(f, t))
                        }
                        function d(t) {
                            for (var e = c(t.length), r = 0; r < t.length; ++r)
                                e.setUint8(f + r, t[r]);
                            h()
                        }
                        function p(t, e) {
                            var r, n, i, o, a, s;
                            e < 24 ? l(t << 5 | e) : e < 256 ? (l(t << 5 | 24),
                                l(e)) : e < 65536 ? (l(t << 5 | 25),
                                    s = e,
                                    h(c(2).setUint16(f, s))) : e < 4294967296 ? (l(t << 5 | 26),
                                        a = e,
                                        h(c(4).setUint32(f, a))) : (l(t << 5 | 27),
                                            i = ((r = e) - (n = r % k)) / k,
                                            (o = c(8)).setUint32(f, i),
                                            o.setUint32(f + 4, n),
                                            h())
                        }
                        if (!function t(e) {
                            var r, n;
                            if (!1 === e)
                                return l(244);
                            if (!0 === e)
                                return l(245);
                            if (null === e)
                                return l(246);
                            if (e === x)
                                return l(247);
                            switch (typeof e) {
                                case "number":
                                    if (Math.floor(e) === e) {
                                        if (0 <= e && e <= y)
                                            return p(0, e);
                                        if (-y <= e && e < 0)
                                            return p(1, -(e + 1))
                                    }
                                    return l(251),
                                        n = e,
                                        void h(c(8).setFloat64(f, n));
                                case "string":
                                    var i = [];
                                    for (r = 0; r < e.length; ++r) {
                                        var o = e.charCodeAt(r);
                                        o < 128 ? i.push(o) : (o < 2048 ? i.push(192 | o >> 6) : (o < 55296 ? i.push(224 | o >> 12) : (o = (1023 & o) << 10,
                                            o |= 1023 & e.charCodeAt(++r),
                                            o += 65536,
                                            i.push(240 | o >> 18),
                                            i.push(128 | o >> 12 & 63)),
                                            i.push(128 | o >> 6 & 63)),
                                            i.push(128 | 63 & o))
                                    }
                                    return p(3, i.length),
                                        d(i);
                                default:
                                    var a;
                                    if (Array.isArray(e))
                                        for (p(4, a = e.length),
                                            r = 0; r < a; ++r)
                                            t(e[r]);
                                    else if (e instanceof Uint8Array)
                                        p(2, e.length),
                                            d(e);
                                    else {
                                        var s = Object.keys(e);
                                        for (p(5, a = s.length),
                                            r = 0; r < a; ++r) {
                                            var u = s[r];
                                            t(u),
                                                t(e[u])
                                        }
                                    }
                            }
                        }(t),
                            "slice" in s)
                            return s.slice(0, f);
                        for (var e = new ArrayBuffer(f), r = new DataView(e), n = 0; n < f; ++n)
                            r.setUint8(n, u.getUint8(n));
                        return e
                    },
                    decode: function (e, d, p) {
                        var y = new DataView(e)
                            , v = 0;
                        function g(t, e) {
                            return v += t,
                                e
                        }
                        function b(t) {
                            return g(t, new Uint8Array(e, v, t))
                        }
                        function w() {
                            return g(1, y.getUint8(v))
                        }
                        function m() {
                            return g(2, y.getUint16(v))
                        }
                        function r() {
                            return g(4, y.getUint32(v))
                        }
                        function _() {
                            return 255 === y.getUint8(v) && (v += 1,
                                1)
                        }
                        function A(t) {
                            if (t < 24)
                                return t;
                            if (24 === t)
                                return w();
                            if (25 === t)
                                return m();
                            if (26 === t)
                                return r();
                            if (27 === t)
                                return r() * k + r();
                            if (31 === t)
                                return -1;
                            throw "Invalid length encoding"
                        }
                        function E(t) {
                            var e = w();
                            if (255 === e)
                                return -1;
                            var r = A(31 & e);
                            if (r < 0 || e >> 5 !== t)
                                throw "Invalid indefinite length element";
                            return r
                        }
                        function B(t, e) {
                            for (var r = 0; r < e; ++r) {
                                var n = w();
                                128 & n && (n < 224 ? (n = (31 & n) << 6 | 63 & w(),
                                    --e) : n < 240 ? (n = (15 & n) << 12 | (63 & w()) << 6 | 63 & w(),
                                        e -= 2) : (n = (15 & n) << 18 | (63 & w()) << 12 | (63 & w()) << 6 | 63 & w(),
                                            e -= 3)),
                                    n < 65536 ? t.push(n) : (n -= 65536,
                                        t.push(55296 | n >> 10),
                                        t.push(56320 | 1023 & n))
                            }
                        }
                        "function" != typeof d && (d = function (t) {
                            return t
                        }
                        ),
                            "function" != typeof p && (p = function () {
                                return x
                            }
                            );
                        var t = function t() {
                            var e, r, n = w(), i = n >> 5, o = 31 & n;
                            if (7 == i)
                                switch (o) {
                                    case 25:
                                        return function () {
                                            var t = new ArrayBuffer(4)
                                                , e = new DataView(t)
                                                , r = m()
                                                , n = 32768 & r
                                                , i = 31744 & r
                                                , o = 1023 & r;
                                            if (31744 === i)
                                                i = 261120;
                                            else if (0 !== i)
                                                i += 114688;
                                            else if (0 != o)
                                                return (n ? -1 : 1) * o * 5.960464477539063e-8;
                                            return e.setUint32(0, n << 16 | i << 13 | o << 13),
                                                e.getFloat32(0)
                                        }();
                                    case 26:
                                        return g(4, y.getFloat32(v));
                                    case 27:
                                        return g(8, y.getFloat64(v))
                                }
                            if ((r = A(o)) < 0 && (i < 2 || 6 < i))
                                throw "Invalid length";
                            switch (i) {
                                case 0:
                                    return r;
                                case 1:
                                    return -1 - r;
                                case 2:
                                    if (r < 0) {
                                        for (var a = [], s = 0; 0 <= (r = E(i));)
                                            s += r,
                                                a.push(b(r));
                                        var u = new Uint8Array(s)
                                            , f = 0;
                                        for (e = 0; e < a.length; ++e)
                                            u.set(a[e], f),
                                                f += a[e].length;
                                        return u
                                    }
                                    return b(r);
                                case 3:
                                    var c = [];
                                    if (r < 0)
                                        for (; 0 <= (r = E(i));)
                                            B(c, r);
                                    else
                                        B(c, r);
                                    return String.fromCharCode.apply(null, c);
                                case 4:
                                    var h;
                                    if (r < 0)
                                        for (h = []; !_();)
                                            h.push(t());
                                    else
                                        for (h = new Array(r),
                                            e = 0; e < r; ++e)
                                            h[e] = t();
                                    return h;
                                case 5:
                                    var l = {};
                                    for (e = 0; e < r || r < 0 && !_(); ++e)
                                        l[t()] = t();
                                    return l;
                                case 6:
                                    return d(t(), r);
                                case 7:
                                    switch (r) {
                                        case 20:
                                            return !1;
                                        case 21:
                                            return !0;
                                        case 22:
                                            return null;
                                        case 23:
                                            return x;
                                        default:
                                            return p(r)
                                    }
                            }
                        }();
                        if (v !== e.byteLength)
                            throw "Remaining bytes";
                        return t
                    }
                };
                void 0 !== r && r.exports ? r.exports = e : t.CBOR || (t.CBOR = e)
            }(this)
        }
            , {}],
        41: [function (t, e, r) {
            var d = t("./biginteger").JSBigInt
                , n = function () {
                    for (var s = {}, t = "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz", f = [], e = 0; e < t.length; e++)
                        f.push(t.charCodeAt(e));
                    var c = [0, 2, 3, 5, 6, 7, 9, 10, 11]
                        , h = f.length
                        , l = new d(2).pow(64);
                    return s.encode_block = function (t, e, r) {
                        if (t.length < 1 || 11 < t.length)
                            throw "Invalid block length: " + t.length;
                        for (var n = function (t) {
                            if (t.length < 1 || 8 < t.length)
                                throw "Invalid input length";
                            var e = d.ZERO
                                , r = new d(2).pow(8)
                                , n = 0;
                            switch (9 - t.length) {
                                case 1:
                                    e = e.add(t[n++]);
                                case 2:
                                    e = e.multiply(r).add(t[n++]);
                                case 3:
                                    e = e.multiply(r).add(t[n++]);
                                case 4:
                                    e = e.multiply(r).add(t[n++]);
                                case 5:
                                    e = e.multiply(r).add(t[n++]);
                                case 6:
                                    e = e.multiply(r).add(t[n++]);
                                case 7:
                                    e = e.multiply(r).add(t[n++]);
                                case 8:
                                    e = e.multiply(r).add(t[n++]);
                                    break;
                                default:
                                    throw "Impossible condition"
                            }
                            return e
                        }(t), i = c[t.length] - 1; 1 === n.compare(0);) {
                            var o = n.divRem(h)
                                , a = o[1];
                            n = o[0],
                                e[r + i] = f[a.toJSValue()],
                                i--
                        }
                        return e
                    }
                        ,
                        s.encode = function (t) {
                            var e = function (t) {
                                if (t.length % 2 != 0)
                                    throw "Hex string has invalid length!";
                                for (var e = new Uint8Array(t.length / 2), r = 0; r < t.length / 2; ++r)
                                    e[r] = parseInt(t.slice(2 * r, 2 * r + 2), 16);
                                return e
                            }(t);
                            if (0 === e.length)
                                return "";
                            var r, n = Math.floor(e.length / 8), i = e.length % 8, o = 11 * n + c[i], a = new Uint8Array(o);
                            for (r = 0; r < o; ++r)
                                a[r] = f[0];
                            for (r = 0; r < n; r++)
                                a = s.encode_block(e.subarray(8 * r, 8 * r + 8), a, 11 * r);
                            return 0 < i && (a = s.encode_block(e.subarray(8 * n, 8 * n + i), a, 11 * n)),
                                function (t) {
                                    for (var e = [], r = 0; r < t.length; r++)
                                        e.push(String.fromCharCode(t[r]));
                                    return e.join("")
                                }(a)
                        }
                        ,
                        s.decode_block = function (t, e, r) {
                            if (t.length < 1 || 11 < t.length)
                                throw "Invalid block length: " + t.length;
                            var n = c.indexOf(t.length);
                            if (n <= 0)
                                throw "Invalid block size";
                            for (var i = new d(0), o = new d(1), a = t.length - 1; 0 <= a; a--) {
                                var s = f.indexOf(t[a]);
                                if (s < 0)
                                    throw "Invalid symbol";
                                var u = o.multiply(s).add(i);
                                if (1 === u.compare(l))
                                    throw "Overflow";
                                i = u,
                                    o = o.multiply(h)
                            }
                            if (n < 8 && new d(2).pow(8 * n).compare(i) <= 0)
                                throw "Overflow 2";
                            return e.set(function (t, e) {
                                var r = new Uint8Array(e);
                                if (e < 1 || 8 < e)
                                    throw "Invalid input length";
                                for (var n = new d(2).pow(8), i = e - 1; 0 <= i; i--)
                                    r[i] = t.remainder(n).toJSValue(),
                                        t = t.divide(n);
                                return r
                            }(i, n), r),
                                e
                        }
                        ,
                        s.decode = function (t) {
                            if (0 === (t = function (t) {
                                for (var e = new Uint8Array(t.length), r = 0; r < t.length; r++)
                                    e[r] = t.charCodeAt(r);
                                return e
                            }(t)).length)
                                return "";
                            var e = Math.floor(t.length / 11)
                                , r = t.length % 11
                                , n = c.indexOf(r);
                            if (n < 0)
                                throw "Invalid encoded length";
                            for (var i = new Uint8Array(8 * e + n), o = 0; o < e; o++)
                                i = s.decode_block(t.subarray(11 * o, 11 * o + 11), i, 8 * o);
                            return 0 < r && (i = s.decode_block(t.subarray(11 * e, 11 * e + r), i, 8 * e)),
                                function (t) {
                                    for (var e = [], r = 0; r < t.length; ++r)
                                        e.push(("0" + t[r].toString(16)).slice(-2));
                                    return e.join("")
                                }(i)
                        }
                        ,
                        s
                }();
            e.exports = n
        }
            , {
            "./biginteger": 37
        }],
        42: [function (t, e, r) {
            var i = t("./bech32");
            function o(t, e, r, n) {
                for (var i = 0, o = 0, a = [], s = (1 << r) - 1, u = 0; u < t.length; ++u) {
                    var f = t[u];
                    if (f < 0 || f >> e != 0)
                        return null;
                    for (i = i << e | f,
                        o += e; r <= o;)
                        o -= r,
                            a.push(i >> o & s)
                }
                if (n)
                    0 < o && a.push(i << r - o & s);
                else if (e <= o || i << r - o & s)
                    return null;
                return a
            }
            function a(t, e) {
                var r = i.decode(e);
                if (null === r || r.hrp !== t || r.data.length < 1 || 16 < r.data[0])
                    return null;
                var n = o(r.data.slice(1), 5, 8, !1);
                return null === n || n.length < 2 || 40 < n.length || 0 === r.data[0] && 20 !== n.length && 32 !== n.length ? null : {
                    version: r.data[0],
                    program: n
                }
            }
            function n(t, e, r) {
                var n = i.encode(t, [e].concat(o(r, 8, 5, !0)));
                return null === a(t, n) ? null : n
            }
            e.exports = {
                encode: n,
                decode: a,
                isValidAddress: function (t, e) {
                    var r = a(e = e || "bc", t);
                    return null === r && (r = a(e = "tb", t)),
                        null !== r && n(e, r.version, r.program) === t.toLowerCase()
                }
            }
        }
            , {
            "./bech32": 36
        }],
        43: [function (t, O, e) {
            (function (t, e) {
                "use strict";
                var h = "input is invalid type"
                    , r = "object" == typeof window
                    , n = r ? window : {};
                n.JS_SHA3_NO_WINDOW && (r = !1);
                var i = !r && "object" == typeof self;
                !n.JS_SHA3_NO_NODE_JS && "object" == typeof t && t.versions && t.versions.node ? n = e : i && (n = self);
                var l = !n.JS_SHA3_NO_ARRAY_BUFFER && "undefined" != typeof ArrayBuffer
                    , u = "0123456789abcdef".split("")
                    , o = [4, 1024, 262144, 67108864]
                    , d = [0, 8, 16, 24]
                    , ct = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648]
                    , a = [224, 256, 384, 512]
                    , s = [128, 256]
                    , f = ["hex", "buffer", "arrayBuffer", "array", "digest"]
                    , c = {
                        128: 168,
                        256: 136
                    };
                !n.JS_SHA3_NO_NODE_JS && Array.isArray || (Array.isArray = function (t) {
                    return "[object Array]" === Object.prototype.toString.call(t)
                }
                ),
                    !l || !n.JS_SHA3_NO_ARRAY_BUFFER_IS_VIEW && ArrayBuffer.isView || (ArrayBuffer.isView = function (t) {
                        return "object" == typeof t && t.buffer && t.buffer.constructor === ArrayBuffer
                    }
                    );
                for (var p = function (e, r, n) {
                    return function (t) {
                        return new S(e, r, e).update(t)[n]()
                    }
                }, y = function (r, n, i) {
                    return function (t, e) {
                        return new S(r, n, e).update(t)[i]()
                    }
                }, v = function (i, t, o) {
                    return function (t, e, r, n) {
                        return _["cshake" + i].update(t, e, r, n)[o]()
                    }
                }, g = function (i, t, o) {
                    return function (t, e, r, n) {
                        return _["kmac" + i].update(t, e, r, n)[o]()
                    }
                }, b = function (t, e, r, n) {
                    for (var i = 0; i < f.length; ++i) {
                        var o = f[i];
                        t[o] = e(r, n, o)
                    }
                    return t
                }, w = function (t, e) {
                    var r = p(t, e, "hex");
                    return r.create = function () {
                        return new S(t, e, t)
                    }
                        ,
                        r.update = function (t) {
                            return r.create().update(t)
                        }
                        ,
                        b(r, p, t, e)
                }, m = [{
                    name: "keccak",
                    padding: [1, 256, 65536, 16777216],
                    bits: a,
                    createMethod: w
                }, {
                    name: "sha3",
                    padding: [6, 1536, 393216, 100663296],
                    bits: a,
                    createMethod: w
                }, {
                    name: "shake",
                    padding: [31, 7936, 2031616, 520093696],
                    bits: s,
                    createMethod: function (e, r) {
                        var n = y(e, r, "hex");
                        return n.create = function (t) {
                            return new S(e, r, t)
                        }
                            ,
                            n.update = function (t, e) {
                                return n.create(e).update(t)
                            }
                            ,
                            b(n, y, e, r)
                    }
                }, {
                    name: "cshake",
                    padding: o,
                    bits: s,
                    createMethod: function (n, i) {
                        var o = c[n]
                            , a = v(n, 0, "hex");
                        return a.create = function (t, e, r) {
                            return e || r ? new S(n, i, t).bytepad([e, r], o) : _["shake" + n].create(t)
                        }
                            ,
                            a.update = function (t, e, r, n) {
                                return a.create(e, r, n).update(t)
                            }
                            ,
                            b(a, v, n, i)
                    }
                }, {
                    name: "kmac",
                    padding: o,
                    bits: s,
                    createMethod: function (n, i) {
                        var o = c[n]
                            , a = g(n, 0, "hex");
                        return a.create = function (t, e, r) {
                            return new C(n, i, e).bytepad(["KMAC", r], o).bytepad([t], o)
                        }
                            ,
                            a.update = function (t, e, r, n) {
                                return a.create(t, r, n).update(e)
                            }
                            ,
                            b(a, g, n, i)
                    }
                }], _ = {}, A = [], E = 0; E < m.length; ++E)
                    for (var B = m[E], x = B.bits, k = 0; k < x.length; ++k) {
                        var U = B.name + "_" + x[k];
                        if (A.push(U),
                            _[U] = B.createMethod(x[k], B.padding),
                            "sha3" !== B.name) {
                            var T = B.name + x[k];
                            A.push(T),
                                _[T] = _[U]
                        }
                    }
                function S(t, e, r) {
                    this.blocks = [],
                        this.s = [],
                        this.padding = e,
                        this.outputBits = r,
                        this.reset = !0,
                        this.finalized = !1,
                        this.block = 0,
                        this.start = 0,
                        this.blockCount = 1600 - (t << 1) >> 5,
                        this.byteCount = this.blockCount << 2,
                        this.outputBlocks = r >> 5,
                        this.extraBytes = (31 & r) >> 3;
                    for (var n = 0; n < 50; ++n)
                        this.s[n] = 0
                }
                function C(t, e, r) {
                    S.call(this, t, e, r)
                }
                S.prototype.update = function (t) {
                    if (!this.finalized) {
                        var e, r = typeof t;
                        if ("string" != r) {
                            if ("object" != r)
                                throw h;
                            if (null === t)
                                throw h;
                            if (l && t.constructor === ArrayBuffer)
                                t = new Uint8Array(t);
                            else if (!(Array.isArray(t) || l && ArrayBuffer.isView(t)))
                                throw h;
                            e = !0
                        }
                        for (var n, i, o = this.blocks, a = this.byteCount, s = t.length, u = this.blockCount, f = 0, c = this.s; f < s;) {
                            if (this.reset)
                                for (this.reset = !1,
                                    o[0] = this.block,
                                    n = 1; n < u + 1; ++n)
                                    o[n] = 0;
                            if (e)
                                for (n = this.start; f < s && n < a; ++f)
                                    o[n >> 2] |= t[f] << d[3 & n++];
                            else
                                for (n = this.start; f < s && n < a; ++f)
                                    (i = t.charCodeAt(f)) < 128 ? o[n >> 2] |= i << d[3 & n++] : (i < 2048 ? o[n >> 2] |= (192 | i >> 6) << d[3 & n++] : (i < 55296 || 57344 <= i ? o[n >> 2] |= (224 | i >> 12) << d[3 & n++] : (i = 65536 + ((1023 & i) << 10 | 1023 & t.charCodeAt(++f)),
                                        o[n >> 2] |= (240 | i >> 18) << d[3 & n++],
                                        o[n >> 2] |= (128 | i >> 12 & 63) << d[3 & n++]),
                                        o[n >> 2] |= (128 | i >> 6 & 63) << d[3 & n++]),
                                        o[n >> 2] |= (128 | 63 & i) << d[3 & n++]);
                            if (a <= (this.lastByteIndex = n)) {
                                for (this.start = n - a,
                                    this.block = o[u],
                                    n = 0; n < u; ++n)
                                    c[n] ^= o[n];
                                I(c),
                                    this.reset = !0
                            } else
                                this.start = n
                        }
                        return this
                    }
                }
                    ,
                    S.prototype.encode = function (t, e) {
                        var r = 255 & t
                            , n = 1
                            , i = [r];
                        for (r = 255 & (t >>= 8); 0 < r;)
                            i.unshift(r),
                                r = 255 & (t >>= 8),
                                ++n;
                        return e ? i.push(n) : i.unshift(n),
                            this.update(i),
                            i.length
                    }
                    ,
                    S.prototype.encodeString = function (t) {
                        var e, r = typeof t;
                        if ("string" != r) {
                            if ("object" != r)
                                throw h;
                            if (null === t)
                                throw h;
                            if (l && t.constructor === ArrayBuffer)
                                t = new Uint8Array(t);
                            else if (!(Array.isArray(t) || l && ArrayBuffer.isView(t)))
                                throw h;
                            e = !0
                        }
                        var n = 0
                            , i = t.length;
                        if (e)
                            n = i;
                        else
                            for (var o = 0; o < t.length; ++o) {
                                var a = t.charCodeAt(o);
                                a < 128 ? n += 1 : a < 2048 ? n += 2 : a < 55296 || 57344 <= a ? n += 3 : (a = 65536 + ((1023 & a) << 10 | 1023 & t.charCodeAt(++o)),
                                    n += 4)
                            }
                        return n += this.encode(8 * n),
                            this.update(t),
                            n
                    }
                    ,
                    S.prototype.bytepad = function (t, e) {
                        for (var r = this.encode(e), n = 0; n < t.length; ++n)
                            r += this.encodeString(t[n]);
                        var i = e - r % e
                            , o = [];
                        return o.length = i,
                            this.update(o),
                            this
                    }
                    ,
                    S.prototype.finalize = function () {
                        if (!this.finalized) {
                            this.finalized = !0;
                            var t = this.blocks
                                , e = this.lastByteIndex
                                , r = this.blockCount
                                , n = this.s;
                            if (t[e >> 2] |= this.padding[3 & e],
                                this.lastByteIndex === this.byteCount)
                                for (t[0] = t[r],
                                    e = 1; e < r + 1; ++e)
                                    t[e] = 0;
                            for (t[r - 1] |= 2147483648,
                                e = 0; e < r; ++e)
                                n[e] ^= t[e];
                            I(n)
                        }
                    }
                    ,
                    S.prototype.toString = S.prototype.hex = function () {
                        this.finalize();
                        for (var t, e = this.blockCount, r = this.s, n = this.outputBlocks, i = this.extraBytes, o = 0, a = 0, s = ""; a < n;) {
                            for (o = 0; o < e && a < n; ++o,
                                ++a)
                                t = r[o],
                                    s += u[t >> 4 & 15] + u[15 & t] + u[t >> 12 & 15] + u[t >> 8 & 15] + u[t >> 20 & 15] + u[t >> 16 & 15] + u[t >> 28 & 15] + u[t >> 24 & 15];
                            a % e == 0 && (I(r),
                                o = 0)
                        }
                        return i && (t = r[o],
                            s += u[t >> 4 & 15] + u[15 & t],
                            1 < i && (s += u[t >> 12 & 15] + u[t >> 8 & 15]),
                            2 < i && (s += u[t >> 20 & 15] + u[t >> 16 & 15])),
                            s
                    }
                    ,
                    S.prototype.buffer = S.prototype.arrayBuffer = function () {
                        this.finalize();
                        var t, e = this.blockCount, r = this.s, n = this.outputBlocks, i = this.extraBytes, o = 0, a = 0, s = this.outputBits >> 3;
                        t = i ? new ArrayBuffer(n + 1 << 2) : new ArrayBuffer(s);
                        for (var u = new Uint32Array(t); a < n;) {
                            for (o = 0; o < e && a < n; ++o,
                                ++a)
                                u[a] = r[o];
                            a % e == 0 && I(r)
                        }
                        return i && (u[o] = r[o],
                            t = t.slice(0, s)),
                            t
                    }
                    ,
                    S.prototype.digest = S.prototype.array = function () {
                        this.finalize();
                        for (var t, e, r = this.blockCount, n = this.s, i = this.outputBlocks, o = this.extraBytes, a = 0, s = 0, u = []; s < i;) {
                            for (a = 0; a < r && s < i; ++a,
                                ++s)
                                t = s << 2,
                                    e = n[a],
                                    u[t] = 255 & e,
                                    u[t + 1] = e >> 8 & 255,
                                    u[t + 2] = e >> 16 & 255,
                                    u[t + 3] = e >> 24 & 255;
                            s % r == 0 && I(n)
                        }
                        return o && (t = s << 2,
                            e = n[a],
                            u[t] = 255 & e,
                            1 < o && (u[t + 1] = e >> 8 & 255),
                            2 < o && (u[t + 2] = e >> 16 & 255)),
                            u
                    }
                    ,
                    (C.prototype = new S).finalize = function () {
                        return this.encode(this.outputBits, !0),
                            S.prototype.finalize.call(this)
                    }
                    ;
                var I = function (t) {
                    var e, r, n, i, o, a, s, u, f, c, h, l, d, p, y, v, g, b, w, m, _, A, E, B, x, k, U, T, S, C, I, O, M, R, L, H, j, F, P, N, z, $, V, D, Y, q, X, J, W, Z, K, G, Q, tt, et, rt, nt, it, ot, at, st, ut, ft;
                    for (n = 0; n < 48; n += 2)
                        i = t[0] ^ t[10] ^ t[20] ^ t[30] ^ t[40],
                            o = t[1] ^ t[11] ^ t[21] ^ t[31] ^ t[41],
                            a = t[2] ^ t[12] ^ t[22] ^ t[32] ^ t[42],
                            s = t[3] ^ t[13] ^ t[23] ^ t[33] ^ t[43],
                            u = t[4] ^ t[14] ^ t[24] ^ t[34] ^ t[44],
                            f = t[5] ^ t[15] ^ t[25] ^ t[35] ^ t[45],
                            c = t[6] ^ t[16] ^ t[26] ^ t[36] ^ t[46],
                            h = t[7] ^ t[17] ^ t[27] ^ t[37] ^ t[47],
                            e = (l = t[8] ^ t[18] ^ t[28] ^ t[38] ^ t[48]) ^ (a << 1 | s >>> 31),
                            r = (d = t[9] ^ t[19] ^ t[29] ^ t[39] ^ t[49]) ^ (s << 1 | a >>> 31),
                            t[0] ^= e,
                            t[1] ^= r,
                            t[10] ^= e,
                            t[11] ^= r,
                            t[20] ^= e,
                            t[21] ^= r,
                            t[30] ^= e,
                            t[31] ^= r,
                            t[40] ^= e,
                            t[41] ^= r,
                            e = i ^ (u << 1 | f >>> 31),
                            r = o ^ (f << 1 | u >>> 31),
                            t[2] ^= e,
                            t[3] ^= r,
                            t[12] ^= e,
                            t[13] ^= r,
                            t[22] ^= e,
                            t[23] ^= r,
                            t[32] ^= e,
                            t[33] ^= r,
                            t[42] ^= e,
                            t[43] ^= r,
                            e = a ^ (c << 1 | h >>> 31),
                            r = s ^ (h << 1 | c >>> 31),
                            t[4] ^= e,
                            t[5] ^= r,
                            t[14] ^= e,
                            t[15] ^= r,
                            t[24] ^= e,
                            t[25] ^= r,
                            t[34] ^= e,
                            t[35] ^= r,
                            t[44] ^= e,
                            t[45] ^= r,
                            e = u ^ (l << 1 | d >>> 31),
                            r = f ^ (d << 1 | l >>> 31),
                            t[6] ^= e,
                            t[7] ^= r,
                            t[16] ^= e,
                            t[17] ^= r,
                            t[26] ^= e,
                            t[27] ^= r,
                            t[36] ^= e,
                            t[37] ^= r,
                            t[46] ^= e,
                            t[47] ^= r,
                            e = c ^ (i << 1 | o >>> 31),
                            r = h ^ (o << 1 | i >>> 31),
                            t[8] ^= e,
                            t[9] ^= r,
                            t[18] ^= e,
                            t[19] ^= r,
                            t[28] ^= e,
                            t[29] ^= r,
                            t[38] ^= e,
                            t[39] ^= r,
                            t[48] ^= e,
                            t[49] ^= r,
                            p = t[0],
                            y = t[1],
                            q = t[11] << 4 | t[10] >>> 28,
                            X = t[10] << 4 | t[11] >>> 28,
                            T = t[20] << 3 | t[21] >>> 29,
                            S = t[21] << 3 | t[20] >>> 29,
                            at = t[31] << 9 | t[30] >>> 23,
                            st = t[30] << 9 | t[31] >>> 23,
                            $ = t[40] << 18 | t[41] >>> 14,
                            V = t[41] << 18 | t[40] >>> 14,
                            R = t[2] << 1 | t[3] >>> 31,
                            L = t[3] << 1 | t[2] >>> 31,
                            v = t[13] << 12 | t[12] >>> 20,
                            g = t[12] << 12 | t[13] >>> 20,
                            J = t[22] << 10 | t[23] >>> 22,
                            W = t[23] << 10 | t[22] >>> 22,
                            C = t[33] << 13 | t[32] >>> 19,
                            I = t[32] << 13 | t[33] >>> 19,
                            ut = t[42] << 2 | t[43] >>> 30,
                            ft = t[43] << 2 | t[42] >>> 30,
                            tt = t[5] << 30 | t[4] >>> 2,
                            et = t[4] << 30 | t[5] >>> 2,
                            H = t[14] << 6 | t[15] >>> 26,
                            j = t[15] << 6 | t[14] >>> 26,
                            b = t[25] << 11 | t[24] >>> 21,
                            w = t[24] << 11 | t[25] >>> 21,
                            Z = t[34] << 15 | t[35] >>> 17,
                            K = t[35] << 15 | t[34] >>> 17,
                            O = t[45] << 29 | t[44] >>> 3,
                            M = t[44] << 29 | t[45] >>> 3,
                            B = t[6] << 28 | t[7] >>> 4,
                            x = t[7] << 28 | t[6] >>> 4,
                            rt = t[17] << 23 | t[16] >>> 9,
                            nt = t[16] << 23 | t[17] >>> 9,
                            F = t[26] << 25 | t[27] >>> 7,
                            P = t[27] << 25 | t[26] >>> 7,
                            m = t[36] << 21 | t[37] >>> 11,
                            _ = t[37] << 21 | t[36] >>> 11,
                            G = t[47] << 24 | t[46] >>> 8,
                            Q = t[46] << 24 | t[47] >>> 8,
                            D = t[8] << 27 | t[9] >>> 5,
                            Y = t[9] << 27 | t[8] >>> 5,
                            k = t[18] << 20 | t[19] >>> 12,
                            U = t[19] << 20 | t[18] >>> 12,
                            it = t[29] << 7 | t[28] >>> 25,
                            ot = t[28] << 7 | t[29] >>> 25,
                            N = t[38] << 8 | t[39] >>> 24,
                            z = t[39] << 8 | t[38] >>> 24,
                            A = t[48] << 14 | t[49] >>> 18,
                            E = t[49] << 14 | t[48] >>> 18,
                            t[0] = p ^ ~v & b,
                            t[1] = y ^ ~g & w,
                            t[10] = B ^ ~k & T,
                            t[11] = x ^ ~U & S,
                            t[20] = R ^ ~H & F,
                            t[21] = L ^ ~j & P,
                            t[30] = D ^ ~q & J,
                            t[31] = Y ^ ~X & W,
                            t[40] = tt ^ ~rt & it,
                            t[41] = et ^ ~nt & ot,
                            t[2] = v ^ ~b & m,
                            t[3] = g ^ ~w & _,
                            t[12] = k ^ ~T & C,
                            t[13] = U ^ ~S & I,
                            t[22] = H ^ ~F & N,
                            t[23] = j ^ ~P & z,
                            t[32] = q ^ ~J & Z,
                            t[33] = X ^ ~W & K,
                            t[42] = rt ^ ~it & at,
                            t[43] = nt ^ ~ot & st,
                            t[4] = b ^ ~m & A,
                            t[5] = w ^ ~_ & E,
                            t[14] = T ^ ~C & O,
                            t[15] = S ^ ~I & M,
                            t[24] = F ^ ~N & $,
                            t[25] = P ^ ~z & V,
                            t[34] = J ^ ~Z & G,
                            t[35] = W ^ ~K & Q,
                            t[44] = it ^ ~at & ut,
                            t[45] = ot ^ ~st & ft,
                            t[6] = m ^ ~A & p,
                            t[7] = _ ^ ~E & y,
                            t[16] = C ^ ~O & B,
                            t[17] = I ^ ~M & x,
                            t[26] = N ^ ~$ & R,
                            t[27] = z ^ ~V & L,
                            t[36] = Z ^ ~G & D,
                            t[37] = K ^ ~Q & Y,
                            t[46] = at ^ ~ut & tt,
                            t[47] = st ^ ~ft & et,
                            t[8] = A ^ ~p & v,
                            t[9] = E ^ ~y & g,
                            t[18] = O ^ ~B & k,
                            t[19] = M ^ ~x & U,
                            t[28] = $ ^ ~R & H,
                            t[29] = V ^ ~L & j,
                            t[38] = G ^ ~D & q,
                            t[39] = Q ^ ~Y & X,
                            t[48] = ut ^ ~tt & rt,
                            t[49] = ft ^ ~et & nt,
                            t[0] ^= ct[n],
                            t[1] ^= ct[n + 1]
                };
                O.exports = _
            }
            ).call(this, t("_process"), "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {})
        }
            , {
            _process: 31
        }],
        44: [function (t, e, r) {
            var n = t("jssha/src/sha256")
                , i = t("./blake256")
                , o = t("./sha3").keccak256
                , a = t("./blake2b")
                , s = t("./base58");
            function u(t) {
                var e = "0123456789ABCDEF"
                    , r = "";
                return r += e.charAt(t >> 4),
                    r += e.charAt(15 & t)
            }
            e.exports = {
                toHex: function (t) {
                    for (var e, r, n = "", i = 0; i < t.length; i++)
                        n += (e = t[i],
                            r = void 0,
                            1 === (r = Math.round(e).toString(16)).length && (r = "0" + r),
                            r);
                    return n
                },
                sha256: function (t) {
                    var e = new n("SHA-256", "HEX");
                    return e.update(t),
                        e.getHash("HEX")
                },
                sha256Checksum: function (t) {
                    return this.sha256(this.sha256(t)).substr(0, 8)
                },
                blake256: function (t) {
                    return (new i).update(t, "hex").digest("hex")
                },
                blake256Checksum: function (t) {
                    return this.blake256(this.blake256(t)).substr(0, 8)
                },
                blake2b: function (t, e) {
                    return new a(e).update(function (t) {
                        for (var e = [], r = 0; r < t.length; r += 2)
                            e.push(parseInt(t.substr(r, 2), 16));
                        return new Uint8Array(e)
                    }(t)).digest("hex")
                },
                keccak256: function (t) {
                    return o(t)
                },
                keccak256Checksum: function (t) {
                    return o(t).toString().substr(0, 8)
                },
                base58: s.decode,
                byteArray2hexStr: function (t) {
                    for (var e = "", r = 0; r < t.length - 1; r++)
                        e += u(t[r]);
                    return e += u(t[r])
                },
                hexStr2byteArray: function (t) {
                    var e, r, n, i = Array(), o = 0, a = 0, s = 0, u = 0;
                    for (a = 0; a < t.length; a++) {
                        var f = t.charAt(a);
                        ("A" <= (n = f) && n <= "F" || "a" <= n && n <= "f" || "0" <= n && n <= "9") && (o <<= 4,
                            o += (r = void 0,
                                r = 0,
                                "A" <= (e = f) && e <= "F" ? r = e.charCodeAt(0) - "A".charCodeAt(0) + 10 : "a" <= e && e <= "f" ? r = e.charCodeAt(0) - "a".charCodeAt(0) + 10 : "0" <= e && e <= "9" && (r = e.charCodeAt(0) - "0".charCodeAt(0)),
                                r),
                            0 == ++s % 2 && (i[u++] = o,
                                o = 0))
                    }
                    return i
                }
            }
        }
            , {
            "./base58": 35,
            "./blake256": 38,
            "./blake2b": 39,
            "./sha3": 43,
            "jssha/src/sha256": 30
        }],
        45: [function (t, e, r) {
            var n = t("./ripple_validator")
                , i = t("./ethereum_validator")
                , o = t("./bitcoin_validator")
                , a = t("./monero_validator")
                , s = t("./nano_validator")
                , u = [{
                    name: "bitcoin",
                    symbol: "btc",
                    addressTypes: {
                        prod: ["00", "05"],
                        testnet: ["6f", "c4"]
                    },
                    validator: o
                }, {
                    name: "bitcoincash",
                    symbol: "bch",
                    addressTypes: {
                        prod: ["00", "05"],
                        testnet: ["6f", "c4"]
                    },
                    validator: o
                }, {
                    name: "litecoin",
                    symbol: "ltc",
                    segwitHrp: "ltc",
                    addressTypes: {
                        prod: ["30", "05", "32"],
                        testnet: ["6f", "c4", "3a"]
                    },
                    validator: o
                }, {
                    name: "peercoin",
                    symbol: "ppc",
                    addressTypes: {
                        prod: ["37", "75"],
                        testnet: ["6f", "c4"]
                    },
                    validator: o
                }, {
                    name: "dogecoin",
                    symbol: "doge",
                    addressTypes: {
                        prod: ["1e", "16"],
                        testnet: ["71", "c4"]
                    },
                    validator: o
                }, {
                    name: "beavercoin",
                    symbol: "bvc",
                    addressTypes: {
                        prod: ["19", "05"],
                        testnet: ["6f", "c4"]
                    },
                    validator: o
                }, {
                    name: "freicoin",
                    symbol: "frc",
                    addressTypes: {
                        prod: ["00", "05"],
                        testnet: ["6f", "c4"]
                    },
                    validator: o
                }, {
                    name: "protoshares",
                    symbol: "pts",
                    addressTypes: {
                        prod: ["38", "05"],
                        testnet: ["6f", "c4"]
                    },
                    validator: o
                }, {
                    name: "megacoin",
                    symbol: "mec",
                    addressTypes: {
                        prod: ["32", "05"],
                        testnet: ["6f", "c4"]
                    },
                    validator: o
                }, {
                    name: "primecoin",
                    symbol: "xpm",
                    addressTypes: {
                        prod: ["17", "53"],
                        testnet: ["6f", "c4"]
                    },
                    validator: o
                }, {
                    name: "auroracoin",
                    symbol: "aur",
                    addressTypes: {
                        prod: ["17", "05"],
                        testnet: ["6f", "c4"]
                    },
                    validator: o
                }, {
                    name: "namecoin",
                    symbol: "nmc",
                    addressTypes: {
                        prod: ["34"],
                        testnet: []
                    },
                    validator: o
                }, {
                    name: "biocoin",
                    symbol: "bio",
                    addressTypes: {
                        prod: ["19", "14"],
                        testnet: ["6f", "c4"]
                    },
                    validator: o
                }, {
                    name: "garlicoin",
                    symbol: "grlc",
                    addressTypes: {
                        prod: ["26", "05"],
                        testnet: ["6f", "c4"]
                    },
                    validator: o
                }, {
                    name: "vertcoin",
                    symbol: "vtc",
                    addressTypes: {
                        prod: ["0x", "47"],
                        testnet: ["6f", "c4"]
                    },
                    segwitHrp: "vtc",
                    validator: o
                }, {
                    name: "bitcoingold",
                    symbol: "btg",
                    addressTypes: {
                        prod: ["26", "17"],
                        testnet: ["6f", "c4"]
                    },
                    validator: o
                }, {
                    name: "komodo",
                    symbol: "kmd",
                    addressTypes: {
                        prod: ["3c", "55"],
                        testnet: ["0", "5"]
                    },
                    validator: o
                }, {
                    name: "bitcoinz",
                    symbol: "btcz",
                    expectedLength: 26,
                    addressTypes: {
                        prod: ["1cb8", "1cbd"],
                        testnet: ["1d25", "1cba"]
                    },
                    validator: o
                }, {
                    name: "bitcoinprivate",
                    symbol: "btcp",
                    expectedLength: 26,
                    addressTypes: {
                        prod: ["1325", "13af"],
                        testnet: ["1957", "19e0"]
                    },
                    validator: o
                }, {
                    name: "hush",
                    symbol: "hush",
                    expectedLength: 26,
                    addressTypes: {
                        prod: ["1cb8", "1cbd"],
                        testnet: ["1d25", "1cba"]
                    },
                    validator: o
                }, {
                    name: "snowgem",
                    symbol: "sng",
                    expectedLength: 26,
                    addressTypes: {
                        prod: ["1c28", "1c2d"],
                        testnet: ["1d25", "1cba"]
                    },
                    validator: o
                }, {
                    name: "zcash",
                    symbol: "zec",
                    expectedLength: 26,
                    addressTypes: {
                        prod: ["1cb8", "1cbd"],
                        testnet: ["1d25", "1cba"]
                    },
                    validator: o
                }, {
                    name: "zclassic",
                    symbol: "zcl",
                    expectedLength: 26,
                    addressTypes: {
                        prod: ["1cb8", "1cbd"],
                        testnet: ["1d25", "1cba"]
                    },
                    validator: o
                }, {
                    name: "zencash",
                    symbol: "zen",
                    expectedLength: 26,
                    addressTypes: {
                        prod: ["2089", "2096"],
                        testnet: ["2092", "2098"]
                    },
                    validator: o
                }, {
                    name: "votecoin",
                    symbol: "vot",
                    expectedLength: 26,
                    addressTypes: {
                        prod: ["1cb8", "1cbd"],
                        testnet: ["1d25", "1cba"]
                    },
                    validator: o
                }, {
                    name: "decred",
                    symbol: "dcr",
                    addressTypes: {
                        prod: ["073f", "071a"],
                        testnet: ["0f21", "0efc"]
                    },
                    hashFunction: "blake256",
                    expectedLength: 26,
                    validator: o
                }, {
                    name: "digibyte",
                    symbol: "dgb",
                    addressTypes: {
                        prod: ["1e"],
                        testnet: []
                    },
                    validator: o
                }, {
                    name: "ethereum",
                    symbol: "eth",
                    validator: i
                }, {
                    name: "etherzero",
                    symbol: "etz",
                    validator: i
                }, {
                    name: "ethereumclassic",
                    symbol: "etc",
                    validator: i
                }, {
                    name: "callisto",
                    symbol: "clo",
                    validator: i
                }, {
                    name: "ripple",
                    symbol: "xrp",
                    validator: n
                }, {
                    name: "dash",
                    symbol: "dash",
                    addressTypes: {
                        prod: ["4c", "10"],
                        testnet: ["8c", "13"]
                    },
                    validator: o
                }, {
                    name: "neo",
                    symbol: "neo",
                    addressTypes: {
                        prod: ["17"],
                        testnet: []
                    },
                    validator: o
                }, {
                    name: "neogas",
                    symbol: "gas",
                    addressTypes: {
                        prod: ["17"],
                        testnet: []
                    },
                    validator: o
                }, {
                    name: "qtum",
                    symbol: "qtum",
                    addressTypes: {
                        prod: ["3a", "32"],
                        testnet: ["78", "6e"]
                    },
                    validator: o
                }, {
                    name: "bankex",
                    symbol: "bkx",
                    validator: i
                }, {
                    name: "monero",
                    symbol: "xmr",
                    addressTypes: {
                        prod: ["18"],
                        testnet: ["53"]
                    },
                    iAddressTypes: {
                        prod: ["19"],
                        testnet: ["54"]
                    },
                    validator: a
                }, {
                    name: "nano",
                    symbol: "nano",
                    validator: s
                }, {
                    name: "raiblocks",
                    symbol: "xrb",
                    validator: s
                }, {
                    name: "stellar",
                    symbol: "xlm",
                    validator: t("./stellar_validator")
                }, {
                    name: "cardano",
                    symbol: "ada",
                    validator: t("./cardano_validator")
                }, {
                    name: "vechain",
                    symbol: "vet",
                    validator: i
                }, {
                    name: "tron",
                    symbol: "trx",
                    addressTypes: {
                        prod: [65],
                        testnet: [160]
                    },
                    validator: t("./tron_validator")
                }];
            e.exports = {
                getByNameOrSymbol: function (t) {
                    for (var e = t.toLowerCase(), r = 0; r < u.length; r++) {
                        var n = u[r];
                        if (n.name === e || n.symbol === e)
                            return n
                    }
                    return null
                }
            }
        }
            , {
            "./bitcoin_validator": 33,
            "./cardano_validator": 34,
            "./ethereum_validator": 46,
            "./monero_validator": 47,
            "./nano_validator": 48,
            "./ripple_validator": 49,
            "./stellar_validator": 50,
            "./tron_validator": 51
        }],
        46: [function (t, e, r) {
            var n = t("./crypto/utils");
            e.exports = {
                isValidAddress: function (t) {
                    return !!/^0x[0-9a-fA-F]{40}$/.test(t) && (!(!/^0x[0-9a-f]{40}$/.test(t) && !/^0x?[0-9A-F]{40}$/.test(t)) || this.verifyChecksum(t))
                },
                verifyChecksum: function (t) {
                    t = t.replace("0x", "");
                    for (var e = n.keccak256(t.toLowerCase()), r = 0; r < 40; r++)
                        if (7 < parseInt(e[r], 16) && t[r].toUpperCase() !== t[r] || parseInt(e[r], 16) <= 7 && t[r].toLowerCase() !== t[r])
                            return !1;
                    return !0
                }
            }
        }
            , {
            "./crypto/utils": 44
        }],
        47: [function (t, e, r) {
            var o = t("./crypto/utils")
                , a = t("./crypto/cnBase58")
                , s = new RegExp("^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{95}$")
                , u = new RegExp("^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{106}$");
            e.exports = {
                isValidAddress: function (t, e, r) {
                    r = r || "prod";
                    var n = "standard";
                    if (!s.test(t)) {
                        if (!u.test(t))
                            return !1;
                        n = "integrated"
                    }
                    var i = a.decode(t);
                    return !!i && (!!function (t, e, r, n) {
                        var i = e.addressTypes;
                        switch ("integrated" == n && (i = e.iAddressTypes),
                        r) {
                            case "prod":
                                return parseInt(t.substr(0, 2), 16) == i.prod[0];
                            case "testnet":
                                return parseInt(t.substr(0, 2), 16) == i.testnet[0];
                            case "both":
                                return parseInt(t.substr(0, 2), 16) == i.prod[0] || parseInt(t.substr(0, 2), 16) == i.testnet[0];
                            default:
                                return
                        }
                    }(i, e, r, n) && i.slice(-8) === o.keccak256Checksum(function (t) {
                        if (t.length % 2 != 0)
                            return null;
                        for (var e = new Uint8Array(t.length / 2), r = 0; r < t.length / 2; ++r)
                            e[r] = parseInt(t.slice(2 * r, 2 * r + 2), 16);
                        return e
                    }(i.slice(0, -8))))
                }
            }
        }
            , {
            "./crypto/cnBase58": 41,
            "./crypto/utils": 44
        }],
        48: [function (t, e, r) {
            var n = t("./crypto/utils")
                , i = "13456789abcdefghijkmnopqrstuwxyz"
                , o = t("base-x")(i)
                , a = new RegExp("^(xrb|nano)_([" + i + "]{60})$");
            e.exports = {
                isValidAddress: function (t) {
                    return !!a.test(t) && this.verifyChecksum(t)
                },
                verifyChecksum: function (t) {
                    var e = o.decode(a.exec(t)[2]).slice(-37);
                    return n.blake2b(n.toHex(e.slice(0, -5)), 5) === n.toHex(e.slice(-5).reverse())
                }
            }
        }
            , {
            "./crypto/utils": 44,
            "base-x": 1
        }],
        49: [function (t, e, r) {
            var n = t("./crypto/utils")
                , i = "rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz"
                , o = t("base-x")(i)
                , a = new RegExp("^r[" + i + "]{27,35}$");
            e.exports = {
                isValidAddress: function (t) {
                    return !!a.test(t) && this.verifyChecksum(t)
                },
                verifyChecksum: function (t) {
                    var e = o.decode(t);
                    return n.sha256Checksum(n.toHex(e.slice(0, -4))) === n.toHex(e.slice(-4))
                }
            }
        }
            , {
            "./crypto/utils": 44,
            "base-x": 1
        }],
        50: [function (t, e, r) {
            var n = t("base-x")
                , i = t("crc")
                , o = t("./crypto/utils")
                , a = "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"
                , s = n(a)
                , u = new RegExp("^[" + a + "]{56}$");
            e.exports = {
                isValidAddress: function (t) {
                    return !!u.test(t) && this.verifyChecksum(t)
                },
                verifyChecksum: function (t) {
                    var e, r, n = s.decode(t);
                    return 48 === n[0] && (r = i.crc16xmodem(n.slice(0, -2)),
                        (e = ((255 & r) << 8 | r >> 8 & 255).toString(16)).length % 2 == 1 && (e = "0" + e),
                        e) === o.toHex(n.slice(-2))
                }
            }
        }
            , {
            "./crypto/utils": 44,
            "base-x": 1,
            crc: 28
        }],
        51: [function (t, e, r) {
            var a = t("./crypto/utils");
            function i(t, e) {
                var r = e || "prod";
                return "prod" !== r && "testnet" !== r && (r = "prod"),
                    t.addressTypes[r][0]
            }
            e.exports = {
                isValidAddress: function (t, e, r) {
                    if (t && void 0 !== t.byteLength)
                        return 21 === t.length && i(e, r) === t[0];
                    if ("string" == typeof t && 42 === t.length && t.startsWith("41"))
                        return !0;
                    var n = function (t) {
                        if ("string" != typeof t)
                            return !1;
                        if (t.length <= 4)
                            return !1;
                        try {
                            var e = a.base58(t)
                        } catch (t) {
                            return !1
                        }
                        if (t.length <= 4)
                            return !1;
                        var r = e.length - 4
                            , n = e.slice(r);
                        e = e.slice(0, r);
                        var i = a.sha256(a.byteArray2hexStr(e))
                            , o = a.hexStr2byteArray(a.sha256(i)).slice(0, 4);
                        return n[0] === o[0] && n[1] === o[1] && n[2] === o[2] && n[3] === o[3] && e
                    }(t);
                    return !!n && (21 === n.length && i(e, r) === n[0])
                }
            }
        }
            , {
            "./crypto/utils": 44
        }],
        52: [function (t, e, r) {
            var i = t("./currencies");
            e.exports = {
                validate: function (t, e, r) {
                    var n = i.getByNameOrSymbol(e || "bitcoin");
                    if (n.validator)
                        return n.validator.isValidAddress(t, n, r);
                    throw new Error("Missing validator for currency: " + e)
                }
            }
        }
            , {
            "./currencies": 45
        }]
    }, {}, [52])(52)
});
